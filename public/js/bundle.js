var app = angular.module('MyApp', ['ngRoute', 'ngAnimate', 'ngTouch', 'ui.bootstrap', 'bootstrapLightbox', 'akoenig.deckgrid', 'ProjectFactory']);

app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {

$routeProvider

    // home page
    .when('/', {
        templateUrl: 'views/home.html',
        controller: 'MainController'
    })

    .when('/about', {
        templateUrl: 'views/about.html',
        controller: 'AboutController'
    })

    .when('/projects', {
        templateUrl: 'views/projects.html',
        controller: 'ProjectController'
    })
    
    .when('/projects/:id/', {
        templateUrl: 'views/project.html',
        controller: 'ProjectController', reloadOnSearch: false})

    .when('/contact', {
        templateUrl: 'views/contact.html',
        controller: 'ContactController'
    });

$locationProvider.html5Mode(true);

}]);
var app = angular.module('MyApp', ['ngRoute', 'ngAnimate', 'ngTouch', 'ui.bootstrap', 'bootstrapLightbox', 'akoenig.deckgrid', 'ProjectFactory']);

app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {

$routeProvider

    // home page
    .when('/', {
        templateUrl: 'views/home.html',
        controller: 'MainController'
    })

    .when('/about', {
        templateUrl: 'views/about.html',
        controller: 'AboutController'
    })

    .when('/projects', {
        templateUrl: 'views/projects.html',
        controller: 'ProjectController'
    })
    
    .when('/projects/:id/', {
        templateUrl: 'views/project.html',
        controller: 'ProjectController', reloadOnSearch: false})

    .when('/contact', {
        templateUrl: 'views/contact.html',
        controller: 'ContactController'
    });

$locationProvider.html5Mode(true);

}]);
var app = angular.module('MyApp', ['ngRoute', 'ngAnimate', 'ngTouch', 'ui.bootstrap', 'bootstrapLightbox', 'akoenig.deckgrid', 'ProjectFactory']);

app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {

$routeProvider

    // home page
    .when('/', {
        templateUrl: 'views/home.html',
        controller: 'MainController'
    })

    .when('/about', {
        templateUrl: 'views/about.html',
        controller: 'AboutController'
    })

    .when('/projects', {
        templateUrl: 'views/projects.html',
        controller: 'ProjectController'
    })
    
    .when('/projects/:id/', {
        templateUrl: 'views/project.html',
        controller: 'ProjectController', reloadOnSearch: false})

    .when('/contact', {
        templateUrl: 'views/contact.html',
        controller: 'ContactController'
    });

$locationProvider.html5Mode(true);
}]);
var app = angular.module('MyApp', ['ngRoute', 'ngAnimate', 'ngTouch', 'ui.bootstrap', 'bootstrapLightbox', 'akoenig.deckgrid', 'ProjectFactory']);

app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {

$routeProvider

    // home page
    .when('/', {
        templateUrl: 'views/home.html',
        controller: 'MainController'
    })

    .when('/about', {
        templateUrl: 'views/about.html',
        controller: 'AboutController'
    })

    .when('/projects', {
        templateUrl: 'views/projects.html',
        controller: 'ProjectController'
    })
    
    .when('/projects/:id/', {
        templateUrl: 'views/project.html',
        controller: 'ProjectController', reloadOnSearch: false})

    .when('/contact', {
        templateUrl: 'views/contact.html',
        controller: 'ContactController'
    });

$locationProvider.html5Mode(true);
}]);
var app = angular.module('MyApp', ['ngRoute', 'ngAnimate', 'ngTouch', 'ui.bootstrap', 'bootstrapLightbox', 'akoenig.deckgrid', 'ProjectFactory']);

app.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {

$routeProvider

    // home page
    .when('/', {
        templateUrl: 'views/home.html',
        controller: 'MainController'
    })

    .when('/about', {
        templateUrl: 'views/about.html',
        controller: 'AboutController'
    })

    .when('/projects', {
        templateUrl: 'views/projects.html',
        controller: 'ProjectController'
    })
    
    .when('/projects/:id/', {
        templateUrl: 'views/project.html',
        controller: 'ProjectController', reloadOnSearch: false})

    .when('/contact', {
        templateUrl: 'views/contact.html',
        controller: 'ContactController'
    });

$locationProvider.html5Mode(true);

}]);
////////////////Main/////////////////////
app.controller('MainController', ['$scope', 'ProjectService', function($scope, ProjectService) {
  
  var projectId = false;
  
  ProjectService.get(function(data) {
    data = data || {};

    var slides = $scope.slides = [];
    
    if (data) {
      data = data.filter(enabledFilter);
      data.sort(function(a,b){ return new Date(b.createdDate) - new Date(a.createdDate); });
      angular.forEach(data, function(value, key) {
        slides.push(buildSlide(value.mainImage.url, value.mainImage.caption));
      });
    }
  }, projectId);
  
  $scope.slideInterval = 3000;  
  
  function buildSlide(image, caption) {
    var slide = {
      'image': image,
      'caption': caption
    }    
    return slide;
  };
}]);

////////////////Project/////////////////////
app.controller('ProjectController', ['$scope', 'ProjectService', '$routeParams', "Lightbox", function($scope, ProjectService, $routeParams, Lightbox) {
  $scope.title = 'Projects';
  //console.log(Lightbox);
  $scope.openLightboxModal = function (index) {
    Lightbox.openModal($scope.project.addImages, index);
  }
  
  var projectId = $routeParams.id || false;

  ProjectService.get(function(data) {
    //console.log(data);
    data = data || {};
    data = data.filter(enabledFilter);
    $scope.projects = data;
    
    if (data.length === 1) {
      $scope.project = data[0];
    } else {
        for (var i = 0; i < $scope.projects.length; i++) {
            if ($scope.projects[i].description.length > 150)
            $scope.projects[i].description = $scope.projects[i].description.substring(0, 150) + "..."
        }
    }
  }, projectId);  
}]);

////////////////Contact/////////////////////
app.controller('ContactController', ['$scope', '$http', function($scope, $http) {
  $scope.tagline = 'This is the contact page.';

  $scope.contact = {};

  $scope.send = function(isValid) {
  	//Send data
    var anti = $scope.contact.anti || false;
    if (anti)
      return  false;
    
  	if (isValid) {
      var phone = $scope.contact.phone || "";
      var lvblnk = $scope.contact.anti || "";
      var data = {
        "name": $scope.contact.name,
        "phone": phone,
        "email": $scope.contact.email,
        "message": $scope.contact.message,
        "lvblnk": lvblnk        
      }
   		$http.post('/api/contactus/', data).then(function(res) {
         $scope.contact.name = "";
         $scope.contact.phone = "";
         $scope.contact.email = "";
         $scope.contact.message = "";
         $scope.contactForm.$setPristine();
 
       });
  	}
  };
}]);

////////////////About/////////////////////
app.controller('AboutController', ['$scope', function($scope) {
  $scope.tagline = 'This is the about page.';
}]);

function enabledFilter(value) {
    return value.isEnabled;
}
app.directive('projectMeta', function() {
	return {
		restrict: 'E',
		scope: {
			project: '='
		},
		replace: true,
		templateUrl: "views/templates/projectMeta.html",
		controller: function($scope) {
		}
	};
});
angular.module('ProjectFactory', []).factory('ProjectService', ['$http', function($http) {

  return {
    get : function(callback, id) {
      callback = callback || false;
      if (!callback)
        return false;

      id = id || false;
      if (!id)
        $http.get('/api/projects').then(function(res) {
          return callback(res.data);
        } );
      else
        $http.get('/api/projects/' + id).then(function(res) {
          return callback(res.data);
        });
    }
  }
}]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2xsZXJzL0NvbnRyb2xsZXJzLmpzIiwiZGlyZWN0aXZlcy9wcm9qZWN0TWV0YS5qcyIsInNlcnZpY2VzL1Byb2plY3RTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDakNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdNeUFwcCcsIFsnbmdSb3V0ZScsICduZ0FuaW1hdGUnLCAnbmdUb3VjaCcsICd1aS5ib290c3RyYXAnLCAnYm9vdHN0cmFwTGlnaHRib3gnLCAnYWtvZW5pZy5kZWNrZ3JpZCcsICdQcm9qZWN0RmFjdG9yeSddKTtcclxuXHJcbmFwcC5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xyXG5cclxuJHJvdXRlUHJvdmlkZXJcclxuXHJcbiAgICAvLyBob21lIHBhZ2VcclxuICAgIC53aGVuKCcvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvaG9tZS5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnTWFpbkNvbnRyb2xsZXInXHJcbiAgICB9KVxyXG5cclxuICAgIC53aGVuKCcvYWJvdXQnLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9hYm91dC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnQWJvdXRDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuXHJcbiAgICAud2hlbignL3Byb2plY3RzJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdHMuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ1Byb2plY3RDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuICAgIFxyXG4gICAgLndoZW4oJy9wcm9qZWN0cy86aWQvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnUHJvamVjdENvbnRyb2xsZXInLCByZWxvYWRPblNlYXJjaDogZmFsc2V9KVxyXG5cclxuICAgIC53aGVuKCcvY29udGFjdCcsIHtcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NvbnRhY3QuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvbnRhY3RDb250cm9sbGVyJ1xyXG4gICAgfSk7XHJcblxyXG4kbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XHJcblxyXG59XSk7IiwiLy8vLy8vLy8vLy8vLy8vL01haW4vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuYXBwLmNvbnRyb2xsZXIoJ01haW5Db250cm9sbGVyJywgWyckc2NvcGUnLCAnUHJvamVjdFNlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsIFByb2plY3RTZXJ2aWNlKSB7XHJcbiAgXHJcbiAgdmFyIHByb2plY3RJZCA9IGZhbHNlO1xyXG4gIFxyXG4gIFByb2plY3RTZXJ2aWNlLmdldChmdW5jdGlvbihkYXRhKSB7XHJcbiAgICBkYXRhID0gZGF0YSB8fCB7fTtcclxuXHJcbiAgICB2YXIgc2xpZGVzID0gJHNjb3BlLnNsaWRlcyA9IFtdO1xyXG4gICAgXHJcbiAgICBpZiAoZGF0YSkge1xyXG4gICAgICBkYXRhID0gZGF0YS5maWx0ZXIoZW5hYmxlZEZpbHRlcik7XHJcbiAgICAgIGRhdGEuc29ydChmdW5jdGlvbihhLGIpeyByZXR1cm4gbmV3IERhdGUoYi5jcmVhdGVkRGF0ZSkgLSBuZXcgRGF0ZShhLmNyZWF0ZWREYXRlKTsgfSk7XHJcbiAgICAgIGFuZ3VsYXIuZm9yRWFjaChkYXRhLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XHJcbiAgICAgICAgc2xpZGVzLnB1c2goYnVpbGRTbGlkZSh2YWx1ZS5tYWluSW1hZ2UudXJsLCB2YWx1ZS5tYWluSW1hZ2UuY2FwdGlvbikpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9LCBwcm9qZWN0SWQpO1xyXG4gIFxyXG4gICRzY29wZS5zbGlkZUludGVydmFsID0gMzAwMDsgIFxyXG4gIFxyXG4gIGZ1bmN0aW9uIGJ1aWxkU2xpZGUoaW1hZ2UsIGNhcHRpb24pIHtcclxuICAgIHZhciBzbGlkZSA9IHtcclxuICAgICAgJ2ltYWdlJzogaW1hZ2UsXHJcbiAgICAgICdjYXB0aW9uJzogY2FwdGlvblxyXG4gICAgfSAgICBcclxuICAgIHJldHVybiBzbGlkZTtcclxuICB9O1xyXG59XSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vUHJvamVjdC8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAuY29udHJvbGxlcignUHJvamVjdENvbnRyb2xsZXInLCBbJyRzY29wZScsICdQcm9qZWN0U2VydmljZScsICckcm91dGVQYXJhbXMnLCBcIkxpZ2h0Ym94XCIsIGZ1bmN0aW9uKCRzY29wZSwgUHJvamVjdFNlcnZpY2UsICRyb3V0ZVBhcmFtcywgTGlnaHRib3gpIHtcclxuICAkc2NvcGUudGl0bGUgPSAnUHJvamVjdHMnO1xyXG4gIC8vY29uc29sZS5sb2coTGlnaHRib3gpO1xyXG4gICRzY29wZS5vcGVuTGlnaHRib3hNb2RhbCA9IGZ1bmN0aW9uIChpbmRleCkge1xyXG4gICAgTGlnaHRib3gub3Blbk1vZGFsKCRzY29wZS5wcm9qZWN0LmFkZEltYWdlcywgaW5kZXgpO1xyXG4gIH1cclxuICBcclxuICB2YXIgcHJvamVjdElkID0gJHJvdXRlUGFyYW1zLmlkIHx8IGZhbHNlO1xyXG5cclxuICBQcm9qZWN0U2VydmljZS5nZXQoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICAgIGRhdGEgPSBkYXRhIHx8IHt9O1xyXG4gICAgZGF0YSA9IGRhdGEuZmlsdGVyKGVuYWJsZWRGaWx0ZXIpO1xyXG4gICAgJHNjb3BlLnByb2plY3RzID0gZGF0YTtcclxuICAgIFxyXG4gICAgaWYgKGRhdGEubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICRzY29wZS5wcm9qZWN0ID0gZGF0YVswXTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAkc2NvcGUucHJvamVjdHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKCRzY29wZS5wcm9qZWN0c1tpXS5kZXNjcmlwdGlvbi5sZW5ndGggPiAxNTApXHJcbiAgICAgICAgICAgICRzY29wZS5wcm9qZWN0c1tpXS5kZXNjcmlwdGlvbiA9ICRzY29wZS5wcm9qZWN0c1tpXS5kZXNjcmlwdGlvbi5zdWJzdHJpbmcoMCwgMTUwKSArIFwiLi4uXCJcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgfSwgcHJvamVjdElkKTsgIFxyXG59XSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vQ29udGFjdC8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAuY29udHJvbGxlcignQ29udGFjdENvbnRyb2xsZXInLCBbJyRzY29wZScsICckaHR0cCcsIGZ1bmN0aW9uKCRzY29wZSwgJGh0dHApIHtcclxuICAkc2NvcGUudGFnbGluZSA9ICdUaGlzIGlzIHRoZSBjb250YWN0IHBhZ2UuJztcclxuXHJcbiAgJHNjb3BlLmNvbnRhY3QgPSB7fTtcclxuXHJcbiAgJHNjb3BlLnNlbmQgPSBmdW5jdGlvbihpc1ZhbGlkKSB7XHJcbiAgXHQvL1NlbmQgZGF0YVxyXG4gICAgdmFyIGFudGkgPSAkc2NvcGUuY29udGFjdC5hbnRpIHx8IGZhbHNlO1xyXG4gICAgaWYgKGFudGkpXHJcbiAgICAgIHJldHVybiAgZmFsc2U7XHJcbiAgICBcclxuICBcdGlmIChpc1ZhbGlkKSB7XHJcbiAgICAgIHZhciBwaG9uZSA9ICRzY29wZS5jb250YWN0LnBob25lIHx8IFwiXCI7XHJcbiAgICAgIHZhciBsdmJsbmsgPSAkc2NvcGUuY29udGFjdC5hbnRpIHx8IFwiXCI7XHJcbiAgICAgIHZhciBkYXRhID0ge1xyXG4gICAgICAgIFwibmFtZVwiOiAkc2NvcGUuY29udGFjdC5uYW1lLFxyXG4gICAgICAgIFwicGhvbmVcIjogcGhvbmUsXHJcbiAgICAgICAgXCJlbWFpbFwiOiAkc2NvcGUuY29udGFjdC5lbWFpbCxcclxuICAgICAgICBcIm1lc3NhZ2VcIjogJHNjb3BlLmNvbnRhY3QubWVzc2FnZSxcclxuICAgICAgICBcImx2Ymxua1wiOiBsdmJsbmsgICAgICAgIFxyXG4gICAgICB9XHJcbiAgIFx0XHQkaHR0cC5wb3N0KCcvYXBpL2NvbnRhY3R1cy8nLCBkYXRhKS50aGVuKGZ1bmN0aW9uKHJlcykge1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdC5uYW1lID0gXCJcIjtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3QucGhvbmUgPSBcIlwiO1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdC5lbWFpbCA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0Lm1lc3NhZ2UgPSBcIlwiO1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdEZvcm0uJHNldFByaXN0aW5lKCk7XHJcbiBcclxuICAgICAgIH0pO1xyXG4gIFx0fVxyXG4gIH07XHJcbn1dKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy9BYm91dC8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcclxuICAkc2NvcGUudGFnbGluZSA9ICdUaGlzIGlzIHRoZSBhYm91dCBwYWdlLic7XHJcbn1dKTtcclxuXHJcbmZ1bmN0aW9uIGVuYWJsZWRGaWx0ZXIodmFsdWUpIHtcclxuICAgIHJldHVybiB2YWx1ZS5pc0VuYWJsZWQ7XHJcbn0iLCJhcHAuZGlyZWN0aXZlKCdwcm9qZWN0TWV0YScsIGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB7XHJcblx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0cHJvamVjdDogJz0nXHJcblx0XHR9LFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdHRlbXBsYXRlVXJsOiBcInZpZXdzL3RlbXBsYXRlcy9wcm9qZWN0TWV0YS5odG1sXCIsXHJcblx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigkc2NvcGUpIHtcclxuXHRcdH1cclxuXHR9O1xyXG59KTsiLCJhbmd1bGFyLm1vZHVsZSgnUHJvamVjdEZhY3RvcnknLCBbXSkuZmFjdG9yeSgnUHJvamVjdFNlcnZpY2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHtcblxuICByZXR1cm4ge1xuICAgIGdldCA6IGZ1bmN0aW9uKGNhbGxiYWNrLCBpZCkge1xuICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmYWxzZTtcbiAgICAgIGlmICghY2FsbGJhY2spXG4gICAgICAgIHJldHVybiBmYWxzZTtcblxuICAgICAgaWQgPSBpZCB8fCBmYWxzZTtcbiAgICAgIGlmICghaWQpXG4gICAgICAgICRodHRwLmdldCgnL2FwaS9wcm9qZWN0cycpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcy5kYXRhKTtcbiAgICAgICAgfSApO1xuICAgICAgZWxzZVxuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcHJvamVjdHMvJyArIGlkKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhyZXMuZGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufV0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9

////////////////Main/////////////////////
app.controller('MainController', ['$scope', 'ProjectService', function($scope, ProjectService) {
  
  var projectId = false;
  
  ProjectService.get(function(data) {
    data = data || {};

    var slides = $scope.slides = [];
    
    if (data) {
      data = data.filter(enabledFilter);
      data.sort(function(a,b){ return new Date(b.createdDate) - new Date(a.createdDate); });
      angular.forEach(data, function(value, key) {
        slides.push(buildSlide(value.mainImage.url, value.mainImage.caption));
      });
    }
  }, projectId);
  
  $scope.slideInterval = 3000;  
  
  function buildSlide(image, caption) {
    var slide = {
      'image': image,
      'caption': caption
    }    
    return slide;
  };
}]);

////////////////Project/////////////////////
app.controller('ProjectController', ['$scope', 'ProjectService', '$routeParams', "Lightbox", function($scope, ProjectService, $routeParams, Lightbox) {
  $scope.title = 'Projects';
  //console.log(Lightbox);
  $scope.openLightboxModal = function (index) {
    Lightbox.openModal($scope.project.addImages, index);
  }
  
  var projectId = $routeParams.id || false;

  ProjectService.get(function(data) {
    //console.log(data);
    data = data || {};
    data = data.filter(enabledFilter);
    $scope.projects = data;
    
    if (data.length === 1) {
      $scope.project = data[0];
    } else {
        for (var i = 0; i < $scope.projects.length; i++) {
            if ($scope.projects[i].description.length > 150)
            $scope.projects[i].description = $scope.projects[i].description.substring(0, 150) + "..."
        }
    }
  }, projectId);  
}]);

////////////////Contact/////////////////////
app.controller('ContactController', ['$scope', '$http', function($scope, $http) {
  $scope.tagline = 'This is the contact page.';

  $scope.contact = {};

  $scope.send = function(isValid) {
  	//Send data
    var anti = $scope.contact.anti || false;
    if (anti)
      return  false;
    
  	if (isValid) {
      var phone = $scope.contact.phone || "";
      var lvblnk = $scope.contact.anti || "";
      var data = {
        "name": $scope.contact.name,
        "phone": phone,
        "email": $scope.contact.email,
        "message": $scope.contact.message,
        "lvblnk": lvblnk        
      }
   		$http.post('/api/contactus/', data).then(function(res) {
         $scope.contact.name = "";
         $scope.contact.phone = "";
         $scope.contact.email = "";
         $scope.contact.message = "";
         $scope.contactForm.$setPristine();
 
       });
  	}
  };
}]);

////////////////About/////////////////////
app.controller('AboutController', ['$scope', function($scope) {
  $scope.tagline = 'This is the about page.';
}]);

function enabledFilter(value) {
    return value.isEnabled;
}
app.directive('projectMeta', function() {
	return {
		restrict: 'E',
		scope: {
			project: '='
		},
		replace: true,
		templateUrl: "views/templates/projectMeta.html",
		controller: function($scope) {
		}
	};
});
angular.module('ProjectFactory', []).factory('ProjectService', ['$http', function($http) {

  return {
    get : function(callback, id) {
      callback = callback || false;
      if (!callback)
        return false;

      id = id || false;
      if (!id)
        $http.get('/api/projects').then(function(res) {
          return callback(res.data);
        } );
      else
        $http.get('/api/projects/' + id).then(function(res) {
          return callback(res.data);
        });
    }
  }
}]);

//# sourceMappingURL=data:application/json;base64,

////////////////Main/////////////////////
app.controller('MainController', ['$scope', 'ProjectService', function($scope, ProjectService) {
  
  var projectId = false;
  
  ProjectService.get(function(data) {
    data = data || {};

    var slides = $scope.slides = [];
    
    if (data) {
      data = data.filter(enabledFilter);
      data.sort(function(a,b){ return new Date(b.createdDate) - new Date(a.createdDate); });
      angular.forEach(data, function(value, key) {
        slides.push(buildSlide(value.mainImage.url, value.mainImage.caption));
      });
    }
  }, projectId);
  
  $scope.slideInterval = 3000;  
  
  function buildSlide(image, caption) {
    var slide = {
      'image': image,
      'caption': caption
    }    
    return slide;
  };
}]);

////////////////Project/////////////////////
app.controller('ProjectController', ['$scope', 'ProjectService', '$routeParams', "Lightbox", function($scope, ProjectService, $routeParams, Lightbox) {
  $scope.title = 'Projects';
  //console.log(Lightbox);
  $scope.openLightboxModal = function (index) {
    Lightbox.openModal($scope.project.addImages, index);
  }
  
  var projectId = $routeParams.id || false;

  ProjectService.get(function(data) {
    //console.log(data);
    data = data || {};
    data = data.filter(enabledFilter);
    $scope.projects = data;
    
    if (data.length === 1) {
      $scope.project = data[0];
    } else {
        for (var i = 0; i < $scope.projects.length; i++) {
            if ($scope.projects[i].description.length > 150)
            $scope.projects[i].description = $scope.projects[i].description.substring(0, 150) + "..."
        }
    }
  }, projectId);  
}]);

////////////////Contact/////////////////////
app.controller('ContactController', ['$scope', '$http', function($scope, $http) {
  $scope.tagline = 'This is the contact page.';

  $scope.contact = {};

  $scope.send = function(isValid) {
  	//Send data
    var anti = $scope.contact.anti || false;
    if (anti)
      return  false;
    
  	if (isValid) {
      var phone = $scope.contact.phone || "";
      var lvblnk = $scope.contact.anti || "";
      var data = {
        "name": $scope.contact.name,
        "phone": phone,
        "email": $scope.contact.email,
        "message": $scope.contact.message,
        "lvblnk": lvblnk        
      }
   		$http.post('/api/contactus/', data).then(function(res) {
         $scope.contact.name = "";
         $scope.contact.phone = "";
         $scope.contact.email = "";
         $scope.contact.message = "";
         $scope.contactForm.$setPristine();
 
       });
  	}
  };
}]);

////////////////About/////////////////////
app.controller('AboutController', ['$scope', function($scope) {
  $scope.tagline = 'This is the about page.';
}]);

function enabledFilter(value) {
    return value.isEnabled;
}
app.directive('projectMeta', function() {
	return {
		restrict: 'E',
		scope: {
			project: '='
		},
		replace: true,
		templateUrl: "views/templates/projectMeta.html",
		controller: function($scope) {
		}
	};
});
angular.module('ProjectFactory', []).factory('ProjectService', ['$http', function($http) {

  return {
    get : function(callback, id) {
      callback = callback || false;
      if (!callback)
        return false;

      id = id || false;
      if (!id)
        $http.get('/api/projects').then(function(res) {
          return callback(res.data);
        } );
      else
        $http.get('/api/projects/' + id).then(function(res) {
          return callback(res.data);
        });
    }
  }
}]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImJ1bmRsZS5qcyIsImNvbnRyb2xsZXJzL0NvbnRyb2xsZXJzLmpzIiwiZGlyZWN0aXZlcy9wcm9qZWN0TWV0YS5qcyIsInNlcnZpY2VzL1Byb2plY3RTZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDOVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNYQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdNeUFwcCcsIFsnbmdSb3V0ZScsICduZ0FuaW1hdGUnLCAnbmdUb3VjaCcsICd1aS5ib290c3RyYXAnLCAnYm9vdHN0cmFwTGlnaHRib3gnLCAnYWtvZW5pZy5kZWNrZ3JpZCcsICdQcm9qZWN0RmFjdG9yeSddKTtcclxuXHJcbmFwcC5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xyXG5cclxuJHJvdXRlUHJvdmlkZXJcclxuXHJcbiAgICAvLyBob21lIHBhZ2VcclxuICAgIC53aGVuKCcvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvaG9tZS5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnTWFpbkNvbnRyb2xsZXInXHJcbiAgICB9KVxyXG5cclxuICAgIC53aGVuKCcvYWJvdXQnLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9hYm91dC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnQWJvdXRDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuXHJcbiAgICAud2hlbignL3Byb2plY3RzJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdHMuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ1Byb2plY3RDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuICAgIFxyXG4gICAgLndoZW4oJy9wcm9qZWN0cy86aWQvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnUHJvamVjdENvbnRyb2xsZXInLCByZWxvYWRPblNlYXJjaDogZmFsc2V9KVxyXG5cclxuICAgIC53aGVuKCcvY29udGFjdCcsIHtcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NvbnRhY3QuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvbnRhY3RDb250cm9sbGVyJ1xyXG4gICAgfSk7XHJcblxyXG4kbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XHJcbn1dKTsiLCJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ015QXBwJywgWyduZ1JvdXRlJywgJ25nQW5pbWF0ZScsICduZ1RvdWNoJywgJ3VpLmJvb3RzdHJhcCcsICdib290c3RyYXBMaWdodGJveCcsICdha29lbmlnLmRlY2tncmlkJywgJ1Byb2plY3RGYWN0b3J5J10pO1xyXG5cclxuYXBwLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XHJcblxyXG4kcm91dGVQcm92aWRlclxyXG5cclxuICAgIC8vIGhvbWUgcGFnZVxyXG4gICAgLndoZW4oJy8nLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9ob21lLmh0bWwnLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdNYWluQ29udHJvbGxlcidcclxuICAgIH0pXHJcblxyXG4gICAgLndoZW4oJy9hYm91dCcsIHtcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2Fib3V0Lmh0bWwnLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdBYm91dENvbnRyb2xsZXInXHJcbiAgICB9KVxyXG5cclxuICAgIC53aGVuKCcvcHJvamVjdHMnLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wcm9qZWN0cy5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnUHJvamVjdENvbnRyb2xsZXInXHJcbiAgICB9KVxyXG4gICAgXHJcbiAgICAud2hlbignL3Byb2plY3RzLzppZC8nLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9wcm9qZWN0Lmh0bWwnLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQcm9qZWN0Q29udHJvbGxlcicsIHJlbG9hZE9uU2VhcmNoOiBmYWxzZX0pXHJcblxyXG4gICAgLndoZW4oJy9jb250YWN0Jywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvY29udGFjdC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnQ29udGFjdENvbnRyb2xsZXInXHJcbiAgICB9KTtcclxuXHJcbiRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcclxufV0pO1xudmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdNeUFwcCcsIFsnbmdSb3V0ZScsICduZ0FuaW1hdGUnLCAnbmdUb3VjaCcsICd1aS5ib290c3RyYXAnLCAnYm9vdHN0cmFwTGlnaHRib3gnLCAnYWtvZW5pZy5kZWNrZ3JpZCcsICdQcm9qZWN0RmFjdG9yeSddKTtcclxuXHJcbmFwcC5jb25maWcoWyckcm91dGVQcm92aWRlcicsICckbG9jYXRpb25Qcm92aWRlcicsIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xyXG5cclxuJHJvdXRlUHJvdmlkZXJcclxuXHJcbiAgICAvLyBob21lIHBhZ2VcclxuICAgIC53aGVuKCcvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvaG9tZS5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnTWFpbkNvbnRyb2xsZXInXHJcbiAgICB9KVxyXG5cclxuICAgIC53aGVuKCcvYWJvdXQnLCB7XHJcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd2aWV3cy9hYm91dC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnQWJvdXRDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuXHJcbiAgICAud2hlbignL3Byb2plY3RzJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdHMuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ1Byb2plY3RDb250cm9sbGVyJ1xyXG4gICAgfSlcclxuICAgIFxyXG4gICAgLndoZW4oJy9wcm9qZWN0cy86aWQvJywge1xyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndmlld3MvcHJvamVjdC5odG1sJyxcclxuICAgICAgICBjb250cm9sbGVyOiAnUHJvamVjdENvbnRyb2xsZXInLCByZWxvYWRPblNlYXJjaDogZmFsc2V9KVxyXG5cclxuICAgIC53aGVuKCcvY29udGFjdCcsIHtcclxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3ZpZXdzL2NvbnRhY3QuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogJ0NvbnRhY3RDb250cm9sbGVyJ1xyXG4gICAgfSk7XHJcblxyXG4kbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSk7XHJcblxyXG59XSk7XG4vLy8vLy8vLy8vLy8vLy8vTWFpbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAuY29udHJvbGxlcignTWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICdQcm9qZWN0U2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgUHJvamVjdFNlcnZpY2UpIHtcclxuICBcclxuICB2YXIgcHJvamVjdElkID0gZmFsc2U7XHJcbiAgXHJcbiAgUHJvamVjdFNlcnZpY2UuZ2V0KGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgIGRhdGEgPSBkYXRhIHx8IHt9O1xyXG5cclxuICAgIHZhciBzbGlkZXMgPSAkc2NvcGUuc2xpZGVzID0gW107XHJcbiAgICBcclxuICAgIGlmIChkYXRhKSB7XHJcbiAgICAgIGRhdGEgPSBkYXRhLmZpbHRlcihlbmFibGVkRmlsdGVyKTtcclxuICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uKGEsYil7IHJldHVybiBuZXcgRGF0ZShiLmNyZWF0ZWREYXRlKSAtIG5ldyBEYXRlKGEuY3JlYXRlZERhdGUpOyB9KTtcclxuICAgICAgYW5ndWxhci5mb3JFYWNoKGRhdGEsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcclxuICAgICAgICBzbGlkZXMucHVzaChidWlsZFNsaWRlKHZhbHVlLm1haW5JbWFnZS51cmwsIHZhbHVlLm1haW5JbWFnZS5jYXB0aW9uKSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sIHByb2plY3RJZCk7XHJcbiAgXHJcbiAgJHNjb3BlLnNsaWRlSW50ZXJ2YWwgPSAzMDAwOyAgXHJcbiAgXHJcbiAgZnVuY3Rpb24gYnVpbGRTbGlkZShpbWFnZSwgY2FwdGlvbikge1xyXG4gICAgdmFyIHNsaWRlID0ge1xyXG4gICAgICAnaW1hZ2UnOiBpbWFnZSxcclxuICAgICAgJ2NhcHRpb24nOiBjYXB0aW9uXHJcbiAgICB9ICAgIFxyXG4gICAgcmV0dXJuIHNsaWRlO1xyXG4gIH07XHJcbn1dKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy9Qcm9qZWN0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdQcm9qZWN0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJ1Byb2plY3RTZXJ2aWNlJywgJyRyb3V0ZVBhcmFtcycsIFwiTGlnaHRib3hcIiwgZnVuY3Rpb24oJHNjb3BlLCBQcm9qZWN0U2VydmljZSwgJHJvdXRlUGFyYW1zLCBMaWdodGJveCkge1xyXG4gICRzY29wZS50aXRsZSA9ICdQcm9qZWN0cyc7XHJcbiAgLy9jb25zb2xlLmxvZyhMaWdodGJveCk7XHJcbiAgJHNjb3BlLm9wZW5MaWdodGJveE1vZGFsID0gZnVuY3Rpb24gKGluZGV4KSB7XHJcbiAgICBMaWdodGJveC5vcGVuTW9kYWwoJHNjb3BlLnByb2plY3QuYWRkSW1hZ2VzLCBpbmRleCk7XHJcbiAgfVxyXG4gIFxyXG4gIHZhciBwcm9qZWN0SWQgPSAkcm91dGVQYXJhbXMuaWQgfHwgZmFsc2U7XHJcblxyXG4gIFByb2plY3RTZXJ2aWNlLmdldChmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgZGF0YSA9IGRhdGEgfHwge307XHJcbiAgICBkYXRhID0gZGF0YS5maWx0ZXIoZW5hYmxlZEZpbHRlcik7XHJcbiAgICAkc2NvcGUucHJvamVjdHMgPSBkYXRhO1xyXG4gICAgXHJcbiAgICBpZiAoZGF0YS5sZW5ndGggPT09IDEpIHtcclxuICAgICAgJHNjb3BlLnByb2plY3QgPSBkYXRhWzBdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRzY29wZS5wcm9qZWN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uLmxlbmd0aCA+IDE1MClcclxuICAgICAgICAgICAgJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uID0gJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uLnN1YnN0cmluZygwLCAxNTApICsgXCIuLi5cIlxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9LCBwcm9qZWN0SWQpOyAgXHJcbn1dKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy9Db250YWN0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdDb250YWN0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCkge1xyXG4gICRzY29wZS50YWdsaW5lID0gJ1RoaXMgaXMgdGhlIGNvbnRhY3QgcGFnZS4nO1xyXG5cclxuICAkc2NvcGUuY29udGFjdCA9IHt9O1xyXG5cclxuICAkc2NvcGUuc2VuZCA9IGZ1bmN0aW9uKGlzVmFsaWQpIHtcclxuICBcdC8vU2VuZCBkYXRhXHJcbiAgICB2YXIgYW50aSA9ICRzY29wZS5jb250YWN0LmFudGkgfHwgZmFsc2U7XHJcbiAgICBpZiAoYW50aSlcclxuICAgICAgcmV0dXJuICBmYWxzZTtcclxuICAgIFxyXG4gIFx0aWYgKGlzVmFsaWQpIHtcclxuICAgICAgdmFyIHBob25lID0gJHNjb3BlLmNvbnRhY3QucGhvbmUgfHwgXCJcIjtcclxuICAgICAgdmFyIGx2YmxuayA9ICRzY29wZS5jb250YWN0LmFudGkgfHwgXCJcIjtcclxuICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgXCJuYW1lXCI6ICRzY29wZS5jb250YWN0Lm5hbWUsXHJcbiAgICAgICAgXCJwaG9uZVwiOiBwaG9uZSxcclxuICAgICAgICBcImVtYWlsXCI6ICRzY29wZS5jb250YWN0LmVtYWlsLFxyXG4gICAgICAgIFwibWVzc2FnZVwiOiAkc2NvcGUuY29udGFjdC5tZXNzYWdlLFxyXG4gICAgICAgIFwibHZibG5rXCI6IGx2YmxuayAgICAgICAgXHJcbiAgICAgIH1cclxuICAgXHRcdCRodHRwLnBvc3QoJy9hcGkvY29udGFjdHVzLycsIGRhdGEpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0Lm5hbWUgPSBcIlwiO1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdC5waG9uZSA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0LmVtYWlsID0gXCJcIjtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3QubWVzc2FnZSA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0Rm9ybS4kc2V0UHJpc3RpbmUoKTtcclxuIFxyXG4gICAgICAgfSk7XHJcbiAgXHR9XHJcbiAgfTtcclxufV0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vL0Fib3V0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdBYm91dENvbnRyb2xsZXInLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xyXG4gICRzY29wZS50YWdsaW5lID0gJ1RoaXMgaXMgdGhlIGFib3V0IHBhZ2UuJztcclxufV0pO1xyXG5cclxuZnVuY3Rpb24gZW5hYmxlZEZpbHRlcih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlLmlzRW5hYmxlZDtcclxufVxuYXBwLmRpcmVjdGl2ZSgncHJvamVjdE1ldGEnLCBmdW5jdGlvbigpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0cmVzdHJpY3Q6ICdFJyxcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdHByb2plY3Q6ICc9J1xyXG5cdFx0fSxcclxuXHRcdHJlcGxhY2U6IHRydWUsXHJcblx0XHR0ZW1wbGF0ZVVybDogXCJ2aWV3cy90ZW1wbGF0ZXMvcHJvamVjdE1ldGEuaHRtbFwiLFxyXG5cdFx0Y29udHJvbGxlcjogZnVuY3Rpb24oJHNjb3BlKSB7XHJcblx0XHR9XHJcblx0fTtcclxufSk7XG5hbmd1bGFyLm1vZHVsZSgnUHJvamVjdEZhY3RvcnknLCBbXSkuZmFjdG9yeSgnUHJvamVjdFNlcnZpY2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHtcblxuICByZXR1cm4ge1xuICAgIGdldCA6IGZ1bmN0aW9uKGNhbGxiYWNrLCBpZCkge1xuICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmYWxzZTtcbiAgICAgIGlmICghY2FsbGJhY2spXG4gICAgICAgIHJldHVybiBmYWxzZTtcblxuICAgICAgaWQgPSBpZCB8fCBmYWxzZTtcbiAgICAgIGlmICghaWQpXG4gICAgICAgICRodHRwLmdldCgnL2FwaS9wcm9qZWN0cycpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcy5kYXRhKTtcbiAgICAgICAgfSApO1xuICAgICAgZWxzZVxuICAgICAgICAkaHR0cC5nZXQoJy9hcGkvcHJvamVjdHMvJyArIGlkKS50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhyZXMuZGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufV0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1Gd2NDNXFjeUlzSW1OdmJuUnliMnhzWlhKekwwTnZiblJ5YjJ4c1pYSnpMbXB6SWl3aVpHbHlaV04wYVhabGN5OXdjbTlxWldOMFRXVjBZUzVxY3lJc0luTmxjblpwWTJWekwxQnliMnBsWTNSVFpYSjJhV05sTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGRGFrTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlEyeEhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVOWVFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRWlMQ0ptYVd4bElqb2lZblZ1Wkd4bExtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpZG1GeUlHRndjQ0E5SUdGdVozVnNZWEl1Ylc5a2RXeGxLQ2ROZVVGd2NDY3NJRnNuYm1kU2IzVjBaU2NzSUNkdVowRnVhVzFoZEdVbkxDQW5ibWRVYjNWamFDY3NJQ2QxYVM1aWIyOTBjM1J5WVhBbkxDQW5ZbTl2ZEhOMGNtRndUR2xuYUhSaWIzZ25MQ0FuWVd0dlpXNXBaeTVrWldOclozSnBaQ2NzSUNkUWNtOXFaV04wUm1GamRHOXllU2RkS1R0Y2NseHVYSEpjYm1Gd2NDNWpiMjVtYVdjb1d5Y2tjbTkxZEdWUWNtOTJhV1JsY2ljc0lDY2tiRzlqWVhScGIyNVFjbTkyYVdSbGNpY3NJR1oxYm1OMGFXOXVLQ1J5YjNWMFpWQnliM1pwWkdWeUxDQWtiRzlqWVhScGIyNVFjbTkyYVdSbGNpa2dlMXh5WEc1Y2NseHVKSEp2ZFhSbFVISnZkbWxrWlhKY2NseHVYSEpjYmlBZ0lDQXZMeUJvYjIxbElIQmhaMlZjY2x4dUlDQWdJQzUzYUdWdUtDY3ZKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lIUmxiWEJzWVhSbFZYSnNPaUFuZG1sbGQzTXZhRzl0WlM1b2RHMXNKeXhjY2x4dUlDQWdJQ0FnSUNCamIyNTBjbTlzYkdWeU9pQW5UV0ZwYmtOdmJuUnliMnhzWlhJblhISmNiaUFnSUNCOUtWeHlYRzVjY2x4dUlDQWdJQzUzYUdWdUtDY3ZZV0p2ZFhRbkxDQjdYSEpjYmlBZ0lDQWdJQ0FnZEdWdGNHeGhkR1ZWY213NklDZDJhV1YzY3k5aFltOTFkQzVvZEcxc0p5eGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MGNtOXNiR1Z5T2lBblFXSnZkWFJEYjI1MGNtOXNiR1Z5SjF4eVhHNGdJQ0FnZlNsY2NseHVYSEpjYmlBZ0lDQXVkMmhsYmlnbkwzQnliMnBsWTNSekp5d2dlMXh5WEc0Z0lDQWdJQ0FnSUhSbGJYQnNZWFJsVlhKc09pQW5kbWxsZDNNdmNISnZhbVZqZEhNdWFIUnRiQ2NzWEhKY2JpQWdJQ0FnSUNBZ1kyOXVkSEp2Ykd4bGNqb2dKMUJ5YjJwbFkzUkRiMjUwY205c2JHVnlKMXh5WEc0Z0lDQWdmU2xjY2x4dUlDQWdJRnh5WEc0Z0lDQWdMbmRvWlc0b0p5OXdjbTlxWldOMGN5ODZhV1F2Snl3Z2UxeHlYRzRnSUNBZ0lDQWdJSFJsYlhCc1lYUmxWWEpzT2lBbmRtbGxkM012Y0hKdmFtVmpkQzVvZEcxc0p5eGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MGNtOXNiR1Z5T2lBblVISnZhbVZqZEVOdmJuUnliMnhzWlhJbkxDQnlaV3h2WVdSUGJsTmxZWEpqYURvZ1ptRnNjMlY5S1Z4eVhHNWNjbHh1SUNBZ0lDNTNhR1Z1S0NjdlkyOXVkR0ZqZENjc0lIdGNjbHh1SUNBZ0lDQWdJQ0IwWlcxd2JHRjBaVlZ5YkRvZ0ozWnBaWGR6TDJOdmJuUmhZM1F1YUhSdGJDY3NYSEpjYmlBZ0lDQWdJQ0FnWTI5dWRISnZiR3hsY2pvZ0owTnZiblJoWTNSRGIyNTBjbTlzYkdWeUoxeHlYRzRnSUNBZ2ZTazdYSEpjYmx4eVhHNGtiRzlqWVhScGIyNVFjbTkyYVdSbGNpNW9kRzFzTlUxdlpHVW9kSEoxWlNrN1hISmNibHh5WEc1OVhTazdJaXdpTHk4dkx5OHZMeTh2THk4dkx5OHZMMDFoYVc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNjbHh1WVhCd0xtTnZiblJ5YjJ4c1pYSW9KMDFoYVc1RGIyNTBjbTlzYkdWeUp5d2dXeWNrYzJOdmNHVW5MQ0FuVUhKdmFtVmpkRk5sY25acFkyVW5MQ0JtZFc1amRHbHZiaWdrYzJOdmNHVXNJRkJ5YjJwbFkzUlRaWEoyYVdObEtTQjdYSEpjYmlBZ1hISmNiaUFnZG1GeUlIQnliMnBsWTNSSlpDQTlJR1poYkhObE8xeHlYRzRnSUZ4eVhHNGdJRkJ5YjJwbFkzUlRaWEoyYVdObExtZGxkQ2htZFc1amRHbHZiaWhrWVhSaEtTQjdYSEpjYmlBZ0lDQmtZWFJoSUQwZ1pHRjBZU0I4ZkNCN2ZUdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2MyeHBaR1Z6SUQwZ0pITmpiM0JsTG5Oc2FXUmxjeUE5SUZ0ZE8xeHlYRzRnSUNBZ1hISmNiaUFnSUNCcFppQW9aR0YwWVNrZ2UxeHlYRzRnSUNBZ0lDQmtZWFJoSUQwZ1pHRjBZUzVtYVd4MFpYSW9aVzVoWW14bFpFWnBiSFJsY2lrN1hISmNiaUFnSUNBZ0lHUmhkR0V1YzI5eWRDaG1kVzVqZEdsdmJpaGhMR0lwZXlCeVpYUjFjbTRnYm1WM0lFUmhkR1VvWWk1amNtVmhkR1ZrUkdGMFpTa2dMU0J1WlhjZ1JHRjBaU2hoTG1OeVpXRjBaV1JFWVhSbEtUc2dmU2s3WEhKY2JpQWdJQ0FnSUdGdVozVnNZWEl1Wm05eVJXRmphQ2hrWVhSaExDQm1kVzVqZEdsdmJpaDJZV3gxWlN3Z2EyVjVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2MyeHBaR1Z6TG5CMWMyZ29ZblZwYkdSVGJHbGtaU2gyWVd4MVpTNXRZV2x1U1cxaFoyVXVkWEpzTENCMllXeDFaUzV0WVdsdVNXMWhaMlV1WTJGd2RHbHZiaWtwTzF4eVhHNGdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOUxDQndjbTlxWldOMFNXUXBPMXh5WEc0Z0lGeHlYRzRnSUNSelkyOXdaUzV6Ykdsa1pVbHVkR1Z5ZG1Gc0lEMGdNekF3TURzZ0lGeHlYRzRnSUZ4eVhHNGdJR1oxYm1OMGFXOXVJR0oxYVd4a1UyeHBaR1VvYVcxaFoyVXNJR05oY0hScGIyNHBJSHRjY2x4dUlDQWdJSFpoY2lCemJHbGtaU0E5SUh0Y2NseHVJQ0FnSUNBZ0oybHRZV2RsSnpvZ2FXMWhaMlVzWEhKY2JpQWdJQ0FnSUNkallYQjBhVzl1SnpvZ1kyRndkR2x2Ymx4eVhHNGdJQ0FnZlNBZ0lDQmNjbHh1SUNBZ0lISmxkSFZ5YmlCemJHbGtaVHRjY2x4dUlDQjlPMXh5WEc1OVhTazdYSEpjYmx4eVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dlVISnZhbVZqZEM4dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHlYRzVoY0hBdVkyOXVkSEp2Ykd4bGNpZ25VSEp2YW1WamRFTnZiblJ5YjJ4c1pYSW5MQ0JiSnlSelkyOXdaU2NzSUNkUWNtOXFaV04wVTJWeWRtbGpaU2NzSUNja2NtOTFkR1ZRWVhKaGJYTW5MQ0JjSWt4cFoyaDBZbTk0WENJc0lHWjFibU4wYVc5dUtDUnpZMjl3WlN3Z1VISnZhbVZqZEZObGNuWnBZMlVzSUNSeWIzVjBaVkJoY21GdGN5d2dUR2xuYUhSaWIzZ3BJSHRjY2x4dUlDQWtjMk52Y0dVdWRHbDBiR1VnUFNBblVISnZhbVZqZEhNbk8xeHlYRzRnSUM4dlkyOXVjMjlzWlM1c2IyY29UR2xuYUhSaWIzZ3BPMXh5WEc0Z0lDUnpZMjl3WlM1dmNHVnVUR2xuYUhSaWIzaE5iMlJoYkNBOUlHWjFibU4wYVc5dUlDaHBibVJsZUNrZ2UxeHlYRzRnSUNBZ1RHbG5hSFJpYjNndWIzQmxiazF2WkdGc0tDUnpZMjl3WlM1d2NtOXFaV04wTG1Ga1pFbHRZV2RsY3l3Z2FXNWtaWGdwTzF4eVhHNGdJSDFjY2x4dUlDQmNjbHh1SUNCMllYSWdjSEp2YW1WamRFbGtJRDBnSkhKdmRYUmxVR0Z5WVcxekxtbGtJSHg4SUdaaGJITmxPMXh5WEc1Y2NseHVJQ0JRY205cVpXTjBVMlZ5ZG1salpTNW5aWFFvWm5WdVkzUnBiMjRvWkdGMFlTa2dlMXh5WEc0Z0lDQWdMeTlqYjI1emIyeGxMbXh2Wnloa1lYUmhLVHRjY2x4dUlDQWdJR1JoZEdFZ1BTQmtZWFJoSUh4OElIdDlPMXh5WEc0Z0lDQWdaR0YwWVNBOUlHUmhkR0V1Wm1sc2RHVnlLR1Z1WVdKc1pXUkdhV3gwWlhJcE8xeHlYRzRnSUNBZ0pITmpiM0JsTG5CeWIycGxZM1J6SUQwZ1pHRjBZVHRjY2x4dUlDQWdJRnh5WEc0Z0lDQWdhV1lnS0dSaGRHRXViR1Z1WjNSb0lEMDlQU0F4S1NCN1hISmNiaUFnSUNBZ0lDUnpZMjl3WlM1d2NtOXFaV04wSUQwZ1pHRjBZVnN3WFR0Y2NseHVJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQWtjMk52Y0dVdWNISnZhbVZqZEhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSelkyOXdaUzV3Y205cVpXTjBjMXRwWFM1a1pYTmpjbWx3ZEdsdmJpNXNaVzVuZEdnZ1BpQXhOVEFwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ1J6WTI5d1pTNXdjbTlxWldOMGMxdHBYUzVrWlhOamNtbHdkR2x2YmlBOUlDUnpZMjl3WlM1d2NtOXFaV04wYzF0cFhTNWtaWE5qY21sd2RHbHZiaTV6ZFdKemRISnBibWNvTUN3Z01UVXdLU0FySUZ3aUxpNHVYQ0pjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnZlN3Z2NISnZhbVZqZEVsa0tUc2dJRnh5WEc1OVhTazdYSEpjYmx4eVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dlEyOXVkR0ZqZEM4dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHlYRzVoY0hBdVkyOXVkSEp2Ykd4bGNpZ25RMjl1ZEdGamRFTnZiblJ5YjJ4c1pYSW5MQ0JiSnlSelkyOXdaU2NzSUNja2FIUjBjQ2NzSUdaMWJtTjBhVzl1S0NSelkyOXdaU3dnSkdoMGRIQXBJSHRjY2x4dUlDQWtjMk52Y0dVdWRHRm5iR2x1WlNBOUlDZFVhR2x6SUdseklIUm9aU0JqYjI1MFlXTjBJSEJoWjJVdUp6dGNjbHh1WEhKY2JpQWdKSE5qYjNCbExtTnZiblJoWTNRZ1BTQjdmVHRjY2x4dVhISmNiaUFnSkhOamIzQmxMbk5sYm1RZ1BTQm1kVzVqZEdsdmJpaHBjMVpoYkdsa0tTQjdYSEpjYmlBZ1hIUXZMMU5sYm1RZ1pHRjBZVnh5WEc0Z0lDQWdkbUZ5SUdGdWRHa2dQU0FrYzJOdmNHVXVZMjl1ZEdGamRDNWhiblJwSUh4OElHWmhiSE5sTzF4eVhHNGdJQ0FnYVdZZ0tHRnVkR2twWEhKY2JpQWdJQ0FnSUhKbGRIVnliaUFnWm1Gc2MyVTdYSEpjYmlBZ0lDQmNjbHh1SUNCY2RHbG1JQ2hwYzFaaGJHbGtLU0I3WEhKY2JpQWdJQ0FnSUhaaGNpQndhRzl1WlNBOUlDUnpZMjl3WlM1amIyNTBZV04wTG5Cb2IyNWxJSHg4SUZ3aVhDSTdYSEpjYmlBZ0lDQWdJSFpoY2lCc2RtSnNibXNnUFNBa2MyTnZjR1V1WTI5dWRHRmpkQzVoYm5ScElIeDhJRndpWENJN1hISmNiaUFnSUNBZ0lIWmhjaUJrWVhSaElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUZ3aWJtRnRaVndpT2lBa2MyTnZjR1V1WTI5dWRHRmpkQzV1WVcxbExGeHlYRzRnSUNBZ0lDQWdJRndpY0dodmJtVmNJam9nY0dodmJtVXNYSEpjYmlBZ0lDQWdJQ0FnWENKbGJXRnBiRndpT2lBa2MyTnZjR1V1WTI5dWRHRmpkQzVsYldGcGJDeGNjbHh1SUNBZ0lDQWdJQ0JjSW0xbGMzTmhaMlZjSWpvZ0pITmpiM0JsTG1OdmJuUmhZM1F1YldWemMyRm5aU3hjY2x4dUlDQWdJQ0FnSUNCY0lteDJZbXh1YTF3aU9pQnNkbUpzYm1zZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUZ4MFhIUWthSFIwY0M1d2IzTjBLQ2N2WVhCcEwyTnZiblJoWTNSMWN5OG5MQ0JrWVhSaEtTNTBhR1Z1S0daMWJtTjBhVzl1S0hKbGN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBa2MyTnZjR1V1WTI5dWRHRmpkQzV1WVcxbElEMGdYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdKSE5qYjNCbExtTnZiblJoWTNRdWNHaHZibVVnUFNCY0lsd2lPMXh5WEc0Z0lDQWdJQ0FnSUNBa2MyTnZjR1V1WTI5dWRHRmpkQzVsYldGcGJDQTlJRndpWENJN1hISmNiaUFnSUNBZ0lDQWdJQ1J6WTI5d1pTNWpiMjUwWVdOMExtMWxjM05oWjJVZ1BTQmNJbHdpTzF4eVhHNGdJQ0FnSUNBZ0lDQWtjMk52Y0dVdVkyOXVkR0ZqZEVadmNtMHVKSE5sZEZCeWFYTjBhVzVsS0NrN1hISmNiaUJjY2x4dUlDQWdJQ0FnSUgwcE8xeHlYRzRnSUZ4MGZWeHlYRzRnSUgwN1hISmNibjFkS1R0Y2NseHVYSEpjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTlCWW05MWRDOHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh5WEc1aGNIQXVZMjl1ZEhKdmJHeGxjaWduUVdKdmRYUkRiMjUwY205c2JHVnlKeXdnV3lja2MyTnZjR1VuTENCbWRXNWpkR2x2Ymlna2MyTnZjR1VwSUh0Y2NseHVJQ0FrYzJOdmNHVXVkR0ZuYkdsdVpTQTlJQ2RVYUdseklHbHpJSFJvWlNCaFltOTFkQ0J3WVdkbExpYzdYSEpjYm4xZEtUdGNjbHh1WEhKY2JtWjFibU4wYVc5dUlHVnVZV0pzWldSR2FXeDBaWElvZG1Gc2RXVXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQjJZV3gxWlM1cGMwVnVZV0pzWldRN1hISmNibjBpTENKaGNIQXVaR2x5WldOMGFYWmxLQ2R3Y205cVpXTjBUV1YwWVNjc0lHWjFibU4wYVc5dUtDa2dlMXh5WEc1Y2RISmxkSFZ5YmlCN1hISmNibHgwWEhSeVpYTjBjbWxqZERvZ0owVW5MRnh5WEc1Y2RGeDBjMk52Y0dVNklIdGNjbHh1WEhSY2RGeDBjSEp2YW1WamREb2dKejBuWEhKY2JseDBYSFI5TEZ4eVhHNWNkRngwY21Wd2JHRmpaVG9nZEhKMVpTeGNjbHh1WEhSY2RIUmxiWEJzWVhSbFZYSnNPaUJjSW5acFpYZHpMM1JsYlhCc1lYUmxjeTl3Y205cVpXTjBUV1YwWVM1b2RHMXNYQ0lzWEhKY2JseDBYSFJqYjI1MGNtOXNiR1Z5T2lCbWRXNWpkR2x2Ymlna2MyTnZjR1VwSUh0Y2NseHVYSFJjZEgxY2NseHVYSFI5TzF4eVhHNTlLVHNpTENKaGJtZDFiR0Z5TG0xdlpIVnNaU2duVUhKdmFtVmpkRVpoWTNSdmNua25MQ0JiWFNrdVptRmpkRzl5ZVNnblVISnZhbVZqZEZObGNuWnBZMlVuTENCYkp5Um9kSFJ3Snl3Z1puVnVZM1JwYjI0b0pHaDBkSEFwSUh0Y2JseHVJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lHZGxkQ0E2SUdaMWJtTjBhVzl1S0dOaGJHeGlZV05yTENCcFpDa2dlMXh1SUNBZ0lDQWdZMkZzYkdKaFkyc2dQU0JqWVd4c1ltRmpheUI4ZkNCbVlXeHpaVHRjYmlBZ0lDQWdJR2xtSUNnaFkyRnNiR0poWTJzcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmx4dUlDQWdJQ0FnYVdRZ1BTQnBaQ0I4ZkNCbVlXeHpaVHRjYmlBZ0lDQWdJR2xtSUNnaGFXUXBYRzRnSUNBZ0lDQWdJQ1JvZEhSd0xtZGxkQ2duTDJGd2FTOXdjbTlxWldOMGN5Y3BMblJvWlc0b1puVnVZM1JwYjI0b2NtVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOaGJHeGlZV05yS0hKbGN5NWtZWFJoS1R0Y2JpQWdJQ0FnSUNBZ2ZTQXBPMXh1SUNBZ0lDQWdaV3h6WlZ4dUlDQWdJQ0FnSUNBa2FIUjBjQzVuWlhRb0p5OWhjR2t2Y0hKdmFtVmpkSE12SnlBcklHbGtLUzUwYUdWdUtHWjFibU4wYVc5dUtISmxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXeHNZbUZqYXloeVpYTXVaR0YwWVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWMHBPMXh1SWwwc0luTnZkWEpqWlZKdmIzUWlPaUl2YzI5MWNtTmxMeUo5XG5cbi8vLy8vLy8vLy8vLy8vLy9NYWluLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdNYWluQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ1Byb2plY3RTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCBQcm9qZWN0U2VydmljZSkge1xyXG4gIFxyXG4gIHZhciBwcm9qZWN0SWQgPSBmYWxzZTtcclxuICBcclxuICBQcm9qZWN0U2VydmljZS5nZXQoZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgZGF0YSA9IGRhdGEgfHwge307XHJcblxyXG4gICAgdmFyIHNsaWRlcyA9ICRzY29wZS5zbGlkZXMgPSBbXTtcclxuICAgIFxyXG4gICAgaWYgKGRhdGEpIHtcclxuICAgICAgZGF0YSA9IGRhdGEuZmlsdGVyKGVuYWJsZWRGaWx0ZXIpO1xyXG4gICAgICBkYXRhLnNvcnQoZnVuY3Rpb24oYSxiKXsgcmV0dXJuIG5ldyBEYXRlKGIuY3JlYXRlZERhdGUpIC0gbmV3IERhdGUoYS5jcmVhdGVkRGF0ZSk7IH0pO1xyXG4gICAgICBhbmd1bGFyLmZvckVhY2goZGF0YSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xyXG4gICAgICAgIHNsaWRlcy5wdXNoKGJ1aWxkU2xpZGUodmFsdWUubWFpbkltYWdlLnVybCwgdmFsdWUubWFpbkltYWdlLmNhcHRpb24pKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfSwgcHJvamVjdElkKTtcclxuICBcclxuICAkc2NvcGUuc2xpZGVJbnRlcnZhbCA9IDMwMDA7ICBcclxuICBcclxuICBmdW5jdGlvbiBidWlsZFNsaWRlKGltYWdlLCBjYXB0aW9uKSB7XHJcbiAgICB2YXIgc2xpZGUgPSB7XHJcbiAgICAgICdpbWFnZSc6IGltYWdlLFxyXG4gICAgICAnY2FwdGlvbic6IGNhcHRpb25cclxuICAgIH0gICAgXHJcbiAgICByZXR1cm4gc2xpZGU7XHJcbiAgfTtcclxufV0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vL1Byb2plY3QvLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuYXBwLmNvbnRyb2xsZXIoJ1Byb2plY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnUHJvamVjdFNlcnZpY2UnLCAnJHJvdXRlUGFyYW1zJywgXCJMaWdodGJveFwiLCBmdW5jdGlvbigkc2NvcGUsIFByb2plY3RTZXJ2aWNlLCAkcm91dGVQYXJhbXMsIExpZ2h0Ym94KSB7XHJcbiAgJHNjb3BlLnRpdGxlID0gJ1Byb2plY3RzJztcclxuICAvL2NvbnNvbGUubG9nKExpZ2h0Ym94KTtcclxuICAkc2NvcGUub3BlbkxpZ2h0Ym94TW9kYWwgPSBmdW5jdGlvbiAoaW5kZXgpIHtcclxuICAgIExpZ2h0Ym94Lm9wZW5Nb2RhbCgkc2NvcGUucHJvamVjdC5hZGRJbWFnZXMsIGluZGV4KTtcclxuICB9XHJcbiAgXHJcbiAgdmFyIHByb2plY3RJZCA9ICRyb3V0ZVBhcmFtcy5pZCB8fCBmYWxzZTtcclxuXHJcbiAgUHJvamVjdFNlcnZpY2UuZ2V0KGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICBkYXRhID0gZGF0YSB8fCB7fTtcclxuICAgIGRhdGEgPSBkYXRhLmZpbHRlcihlbmFibGVkRmlsdGVyKTtcclxuICAgICRzY29wZS5wcm9qZWN0cyA9IGRhdGE7XHJcbiAgICBcclxuICAgIGlmIChkYXRhLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAkc2NvcGUucHJvamVjdCA9IGRhdGFbMF07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgJHNjb3BlLnByb2plY3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmICgkc2NvcGUucHJvamVjdHNbaV0uZGVzY3JpcHRpb24ubGVuZ3RoID4gMTUwKVxyXG4gICAgICAgICAgICAkc2NvcGUucHJvamVjdHNbaV0uZGVzY3JpcHRpb24gPSAkc2NvcGUucHJvamVjdHNbaV0uZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIDE1MCkgKyBcIi4uLlwiXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gIH0sIHByb2plY3RJZCk7ICBcclxufV0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vL0NvbnRhY3QvLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuYXBwLmNvbnRyb2xsZXIoJ0NvbnRhY3RDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGh0dHAnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwKSB7XHJcbiAgJHNjb3BlLnRhZ2xpbmUgPSAnVGhpcyBpcyB0aGUgY29udGFjdCBwYWdlLic7XHJcblxyXG4gICRzY29wZS5jb250YWN0ID0ge307XHJcblxyXG4gICRzY29wZS5zZW5kID0gZnVuY3Rpb24oaXNWYWxpZCkge1xyXG4gIFx0Ly9TZW5kIGRhdGFcclxuICAgIHZhciBhbnRpID0gJHNjb3BlLmNvbnRhY3QuYW50aSB8fCBmYWxzZTtcclxuICAgIGlmIChhbnRpKVxyXG4gICAgICByZXR1cm4gIGZhbHNlO1xyXG4gICAgXHJcbiAgXHRpZiAoaXNWYWxpZCkge1xyXG4gICAgICB2YXIgcGhvbmUgPSAkc2NvcGUuY29udGFjdC5waG9uZSB8fCBcIlwiO1xyXG4gICAgICB2YXIgbHZibG5rID0gJHNjb3BlLmNvbnRhY3QuYW50aSB8fCBcIlwiO1xyXG4gICAgICB2YXIgZGF0YSA9IHtcclxuICAgICAgICBcIm5hbWVcIjogJHNjb3BlLmNvbnRhY3QubmFtZSxcclxuICAgICAgICBcInBob25lXCI6IHBob25lLFxyXG4gICAgICAgIFwiZW1haWxcIjogJHNjb3BlLmNvbnRhY3QuZW1haWwsXHJcbiAgICAgICAgXCJtZXNzYWdlXCI6ICRzY29wZS5jb250YWN0Lm1lc3NhZ2UsXHJcbiAgICAgICAgXCJsdmJsbmtcIjogbHZibG5rICAgICAgICBcclxuICAgICAgfVxyXG4gICBcdFx0JGh0dHAucG9zdCgnL2FwaS9jb250YWN0dXMvJywgZGF0YSkudGhlbihmdW5jdGlvbihyZXMpIHtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3QubmFtZSA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0LnBob25lID0gXCJcIjtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3QuZW1haWwgPSBcIlwiO1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdC5tZXNzYWdlID0gXCJcIjtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3RGb3JtLiRzZXRQcmlzdGluZSgpO1xyXG4gXHJcbiAgICAgICB9KTtcclxuICBcdH1cclxuICB9O1xyXG59XSk7XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vQWJvdXQvLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuYXBwLmNvbnRyb2xsZXIoJ0Fib3V0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XHJcbiAgJHNjb3BlLnRhZ2xpbmUgPSAnVGhpcyBpcyB0aGUgYWJvdXQgcGFnZS4nO1xyXG59XSk7XHJcblxyXG5mdW5jdGlvbiBlbmFibGVkRmlsdGVyKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdmFsdWUuaXNFbmFibGVkO1xyXG59XG5hcHAuZGlyZWN0aXZlKCdwcm9qZWN0TWV0YScsIGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB7XHJcblx0XHRyZXN0cmljdDogJ0UnLFxyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0cHJvamVjdDogJz0nXHJcblx0XHR9LFxyXG5cdFx0cmVwbGFjZTogdHJ1ZSxcclxuXHRcdHRlbXBsYXRlVXJsOiBcInZpZXdzL3RlbXBsYXRlcy9wcm9qZWN0TWV0YS5odG1sXCIsXHJcblx0XHRjb250cm9sbGVyOiBmdW5jdGlvbigkc2NvcGUpIHtcclxuXHRcdH1cclxuXHR9O1xyXG59KTtcbmFuZ3VsYXIubW9kdWxlKCdQcm9qZWN0RmFjdG9yeScsIFtdKS5mYWN0b3J5KCdQcm9qZWN0U2VydmljZScsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCkge1xuXG4gIHJldHVybiB7XG4gICAgZ2V0IDogZnVuY3Rpb24oY2FsbGJhY2ssIGlkKSB7XG4gICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGZhbHNlO1xuICAgICAgaWYgKCFjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZCA9IGlkIHx8IGZhbHNlO1xuICAgICAgaWYgKCFpZClcbiAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3Byb2plY3RzJykudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2socmVzLmRhdGEpO1xuICAgICAgICB9ICk7XG4gICAgICBlbHNlXG4gICAgICAgICRodHRwLmdldCgnL2FwaS9wcm9qZWN0cy8nICsgaWQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcy5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG59XSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbUZ3Y0M1cWN5SXNJbUoxYm1Sc1pTNXFjeUlzSW1OdmJuUnliMnhzWlhKekwwTnZiblJ5YjJ4c1pYSnpMbXB6SWl3aVpHbHlaV04wYVhabGN5OXdjbTlxWldOMFRXVjBZUzVxY3lJc0luTmxjblpwWTJWekwxQnliMnBsWTNSVFpYSjJhV05sTG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRMmhEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVOMlMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGRGJFZEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUTFoQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTSXNJbVpwYkdVaU9pSmlkVzVrYkdVdWFuTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUoyWVhJZ1lYQndJRDBnWVc1bmRXeGhjaTV0YjJSMWJHVW9KMDE1UVhCd0p5d2dXeWR1WjFKdmRYUmxKeXdnSjI1blFXNXBiV0YwWlNjc0lDZHVaMVJ2ZFdOb0p5d2dKM1ZwTG1KdmIzUnpkSEpoY0Njc0lDZGliMjkwYzNSeVlYQk1hV2RvZEdKdmVDY3NJQ2RoYTI5bGJtbG5MbVJsWTJ0bmNtbGtKeXdnSjFCeWIycGxZM1JHWVdOMGIzSjVKMTBwTzF4eVhHNWNjbHh1WVhCd0xtTnZibVpwWnloYkp5UnliM1YwWlZCeWIzWnBaR1Z5Snl3Z0p5UnNiMk5oZEdsdmJsQnliM1pwWkdWeUp5d2dablZ1WTNScGIyNG9KSEp2ZFhSbFVISnZkbWxrWlhJc0lDUnNiMk5oZEdsdmJsQnliM1pwWkdWeUtTQjdYSEpjYmx4eVhHNGtjbTkxZEdWUWNtOTJhV1JsY2x4eVhHNWNjbHh1SUNBZ0lDOHZJR2h2YldVZ2NHRm5aVnh5WEc0Z0lDQWdMbmRvWlc0b0p5OG5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ2RHVnRjR3hoZEdWVmNtdzZJQ2QyYVdWM2N5OW9iMjFsTG1oMGJXd25MRnh5WEc0Z0lDQWdJQ0FnSUdOdmJuUnliMnhzWlhJNklDZE5ZV2x1UTI5dWRISnZiR3hsY2lkY2NseHVJQ0FnSUgwcFhISmNibHh5WEc0Z0lDQWdMbmRvWlc0b0p5OWhZbTkxZENjc0lIdGNjbHh1SUNBZ0lDQWdJQ0IwWlcxd2JHRjBaVlZ5YkRvZ0ozWnBaWGR6TDJGaWIzVjBMbWgwYld3bkxGeHlYRzRnSUNBZ0lDQWdJR052Ym5SeWIyeHNaWEk2SUNkQlltOTFkRU52Ym5SeWIyeHNaWEluWEhKY2JpQWdJQ0I5S1Z4eVhHNWNjbHh1SUNBZ0lDNTNhR1Z1S0NjdmNISnZhbVZqZEhNbkxDQjdYSEpjYmlBZ0lDQWdJQ0FnZEdWdGNHeGhkR1ZWY213NklDZDJhV1YzY3k5d2NtOXFaV04wY3k1b2RHMXNKeXhjY2x4dUlDQWdJQ0FnSUNCamIyNTBjbTlzYkdWeU9pQW5VSEp2YW1WamRFTnZiblJ5YjJ4c1pYSW5YSEpjYmlBZ0lDQjlLVnh5WEc0Z0lDQWdYSEpjYmlBZ0lDQXVkMmhsYmlnbkwzQnliMnBsWTNSekx6cHBaQzhuTENCN1hISmNiaUFnSUNBZ0lDQWdkR1Z0Y0d4aGRHVlZjbXc2SUNkMmFXVjNjeTl3Y205cVpXTjBMbWgwYld3bkxGeHlYRzRnSUNBZ0lDQWdJR052Ym5SeWIyeHNaWEk2SUNkUWNtOXFaV04wUTI5dWRISnZiR3hsY2ljc0lISmxiRzloWkU5dVUyVmhjbU5vT2lCbVlXeHpaWDBwWEhKY2JseHlYRzRnSUNBZ0xuZG9aVzRvSnk5amIyNTBZV04wSnl3Z2UxeHlYRzRnSUNBZ0lDQWdJSFJsYlhCc1lYUmxWWEpzT2lBbmRtbGxkM012WTI5dWRHRmpkQzVvZEcxc0p5eGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MGNtOXNiR1Z5T2lBblEyOXVkR0ZqZEVOdmJuUnliMnhzWlhJblhISmNiaUFnSUNCOUtUdGNjbHh1WEhKY2JpUnNiMk5oZEdsdmJsQnliM1pwWkdWeUxtaDBiV3cxVFc5a1pTaDBjblZsS1R0Y2NseHVmVjBwT3lJc0luWmhjaUJoY0hBZ1BTQmhibWQxYkdGeUxtMXZaSFZzWlNnblRYbEJjSEFuTENCYkoyNW5VbTkxZEdVbkxDQW5ibWRCYm1sdFlYUmxKeXdnSjI1blZHOTFZMmduTENBbmRXa3VZbTl2ZEhOMGNtRndKeXdnSjJKdmIzUnpkSEpoY0V4cFoyaDBZbTk0Snl3Z0oyRnJiMlZ1YVdjdVpHVmphMmR5YVdRbkxDQW5VSEp2YW1WamRFWmhZM1J2Y25rblhTazdYSEpjYmx4eVhHNWhjSEF1WTI5dVptbG5LRnNuSkhKdmRYUmxVSEp2ZG1sa1pYSW5MQ0FuSkd4dlkyRjBhVzl1VUhKdmRtbGtaWEluTENCbWRXNWpkR2x2Ymlna2NtOTFkR1ZRY205MmFXUmxjaXdnSkd4dlkyRjBhVzl1VUhKdmRtbGtaWElwSUh0Y2NseHVYSEpjYmlSeWIzVjBaVkJ5YjNacFpHVnlYSEpjYmx4eVhHNGdJQ0FnTHk4Z2FHOXRaU0J3WVdkbFhISmNiaUFnSUNBdWQyaGxiaWduTHljc0lIdGNjbHh1SUNBZ0lDQWdJQ0IwWlcxd2JHRjBaVlZ5YkRvZ0ozWnBaWGR6TDJodmJXVXVhSFJ0YkNjc1hISmNiaUFnSUNBZ0lDQWdZMjl1ZEhKdmJHeGxjam9nSjAxaGFXNURiMjUwY205c2JHVnlKMXh5WEc0Z0lDQWdmU2xjY2x4dVhISmNiaUFnSUNBdWQyaGxiaWduTDJGaWIzVjBKeXdnZTF4eVhHNGdJQ0FnSUNBZ0lIUmxiWEJzWVhSbFZYSnNPaUFuZG1sbGQzTXZZV0p2ZFhRdWFIUnRiQ2NzWEhKY2JpQWdJQ0FnSUNBZ1kyOXVkSEp2Ykd4bGNqb2dKMEZpYjNWMFEyOXVkSEp2Ykd4bGNpZGNjbHh1SUNBZ0lIMHBYSEpjYmx4eVhHNGdJQ0FnTG5kb1pXNG9KeTl3Y205cVpXTjBjeWNzSUh0Y2NseHVJQ0FnSUNBZ0lDQjBaVzF3YkdGMFpWVnliRG9nSjNacFpYZHpMM0J5YjJwbFkzUnpMbWgwYld3bkxGeHlYRzRnSUNBZ0lDQWdJR052Ym5SeWIyeHNaWEk2SUNkUWNtOXFaV04wUTI5dWRISnZiR3hsY2lkY2NseHVJQ0FnSUgwcFhISmNiaUFnSUNCY2NseHVJQ0FnSUM1M2FHVnVLQ2N2Y0hKdmFtVmpkSE12T21sa0x5Y3NJSHRjY2x4dUlDQWdJQ0FnSUNCMFpXMXdiR0YwWlZWeWJEb2dKM1pwWlhkekwzQnliMnBsWTNRdWFIUnRiQ2NzWEhKY2JpQWdJQ0FnSUNBZ1kyOXVkSEp2Ykd4bGNqb2dKMUJ5YjJwbFkzUkRiMjUwY205c2JHVnlKeXdnY21Wc2IyRmtUMjVUWldGeVkyZzZJR1poYkhObGZTbGNjbHh1WEhKY2JpQWdJQ0F1ZDJobGJpZ25MMk52Ym5SaFkzUW5MQ0I3WEhKY2JpQWdJQ0FnSUNBZ2RHVnRjR3hoZEdWVmNtdzZJQ2QyYVdWM2N5OWpiMjUwWVdOMExtaDBiV3duTEZ4eVhHNGdJQ0FnSUNBZ0lHTnZiblJ5YjJ4c1pYSTZJQ2REYjI1MFlXTjBRMjl1ZEhKdmJHeGxjaWRjY2x4dUlDQWdJSDBwTzF4eVhHNWNjbHh1Skd4dlkyRjBhVzl1VUhKdmRtbGtaWEl1YUhSdGJEVk5iMlJsS0hSeWRXVXBPMXh5WEc1Y2NseHVmVjBwTzF4dUx5OHZMeTh2THk4dkx5OHZMeTh2TDAxaGFXNHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZMeTljY2x4dVlYQndMbU52Ym5SeWIyeHNaWElvSjAxaGFXNURiMjUwY205c2JHVnlKeXdnV3lja2MyTnZjR1VuTENBblVISnZhbVZqZEZObGNuWnBZMlVuTENCbWRXNWpkR2x2Ymlna2MyTnZjR1VzSUZCeWIycGxZM1JUWlhKMmFXTmxLU0I3WEhKY2JpQWdYSEpjYmlBZ2RtRnlJSEJ5YjJwbFkzUkpaQ0E5SUdaaGJITmxPMXh5WEc0Z0lGeHlYRzRnSUZCeWIycGxZM1JUWlhKMmFXTmxMbWRsZENobWRXNWpkR2x2Ymloa1lYUmhLU0I3WEhKY2JpQWdJQ0JrWVhSaElEMGdaR0YwWVNCOGZDQjdmVHRjY2x4dVhISmNiaUFnSUNCMllYSWdjMnhwWkdWeklEMGdKSE5qYjNCbExuTnNhV1JsY3lBOUlGdGRPMXh5WEc0Z0lDQWdYSEpjYmlBZ0lDQnBaaUFvWkdGMFlTa2dlMXh5WEc0Z0lDQWdJQ0JrWVhSaElEMGdaR0YwWVM1bWFXeDBaWElvWlc1aFlteGxaRVpwYkhSbGNpazdYSEpjYmlBZ0lDQWdJR1JoZEdFdWMyOXlkQ2htZFc1amRHbHZiaWhoTEdJcGV5QnlaWFIxY200Z2JtVjNJRVJoZEdVb1lpNWpjbVZoZEdWa1JHRjBaU2tnTFNCdVpYY2dSR0YwWlNoaExtTnlaV0YwWldSRVlYUmxLVHNnZlNrN1hISmNiaUFnSUNBZ0lHRnVaM1ZzWVhJdVptOXlSV0ZqYUNoa1lYUmhMQ0JtZFc1amRHbHZiaWgyWVd4MVpTd2dhMlY1S1NCN1hISmNiaUFnSUNBZ0lDQWdjMnhwWkdWekxuQjFjMmdvWW5WcGJHUlRiR2xrWlNoMllXeDFaUzV0WVdsdVNXMWhaMlV1ZFhKc0xDQjJZV3gxWlM1dFlXbHVTVzFoWjJVdVkyRndkR2x2YmlrcE8xeHlYRzRnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlMQ0J3Y205cVpXTjBTV1FwTzF4eVhHNGdJRnh5WEc0Z0lDUnpZMjl3WlM1emJHbGtaVWx1ZEdWeWRtRnNJRDBnTXpBd01Ec2dJRnh5WEc0Z0lGeHlYRzRnSUdaMWJtTjBhVzl1SUdKMWFXeGtVMnhwWkdVb2FXMWhaMlVzSUdOaGNIUnBiMjRwSUh0Y2NseHVJQ0FnSUhaaGNpQnpiR2xrWlNBOUlIdGNjbHh1SUNBZ0lDQWdKMmx0WVdkbEp6b2dhVzFoWjJVc1hISmNiaUFnSUNBZ0lDZGpZWEIwYVc5dUp6b2dZMkZ3ZEdsdmJseHlYRzRnSUNBZ2ZTQWdJQ0JjY2x4dUlDQWdJSEpsZEhWeWJpQnpiR2xrWlR0Y2NseHVJQ0I5TzF4eVhHNTlYU2s3WEhKY2JseHlYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZVSEp2YW1WamRDOHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh5WEc1aGNIQXVZMjl1ZEhKdmJHeGxjaWduVUhKdmFtVmpkRU52Ym5SeWIyeHNaWEluTENCYkp5UnpZMjl3WlNjc0lDZFFjbTlxWldOMFUyVnlkbWxqWlNjc0lDY2tjbTkxZEdWUVlYSmhiWE1uTENCY0lreHBaMmgwWW05NFhDSXNJR1oxYm1OMGFXOXVLQ1J6WTI5d1pTd2dVSEp2YW1WamRGTmxjblpwWTJVc0lDUnliM1YwWlZCaGNtRnRjeXdnVEdsbmFIUmliM2dwSUh0Y2NseHVJQ0FrYzJOdmNHVXVkR2wwYkdVZ1BTQW5VSEp2YW1WamRITW5PMXh5WEc0Z0lDOHZZMjl1YzI5c1pTNXNiMmNvVEdsbmFIUmliM2dwTzF4eVhHNGdJQ1J6WTI5d1pTNXZjR1Z1VEdsbmFIUmliM2hOYjJSaGJDQTlJR1oxYm1OMGFXOXVJQ2hwYm1SbGVDa2dlMXh5WEc0Z0lDQWdUR2xuYUhSaWIzZ3ViM0JsYmsxdlpHRnNLQ1J6WTI5d1pTNXdjbTlxWldOMExtRmtaRWx0WVdkbGN5d2dhVzVrWlhncE8xeHlYRzRnSUgxY2NseHVJQ0JjY2x4dUlDQjJZWElnY0hKdmFtVmpkRWxrSUQwZ0pISnZkWFJsVUdGeVlXMXpMbWxrSUh4OElHWmhiSE5sTzF4eVhHNWNjbHh1SUNCUWNtOXFaV04wVTJWeWRtbGpaUzVuWlhRb1puVnVZM1JwYjI0b1pHRjBZU2tnZTF4eVhHNGdJQ0FnTHk5amIyNXpiMnhsTG14dlp5aGtZWFJoS1R0Y2NseHVJQ0FnSUdSaGRHRWdQU0JrWVhSaElIeDhJSHQ5TzF4eVhHNGdJQ0FnWkdGMFlTQTlJR1JoZEdFdVptbHNkR1Z5S0dWdVlXSnNaV1JHYVd4MFpYSXBPMXh5WEc0Z0lDQWdKSE5qYjNCbExuQnliMnBsWTNSeklEMGdaR0YwWVR0Y2NseHVJQ0FnSUZ4eVhHNGdJQ0FnYVdZZ0tHUmhkR0V1YkdWdVozUm9JRDA5UFNBeEtTQjdYSEpjYmlBZ0lDQWdJQ1J6WTI5d1pTNXdjbTlxWldOMElEMGdaR0YwWVZzd1hUdGNjbHh1SUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdabTl5SUNoMllYSWdhU0E5SURBN0lHa2dQQ0FrYzJOdmNHVXVjSEp2YW1WamRITXViR1Z1WjNSb095QnBLeXNwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDUnpZMjl3WlM1d2NtOXFaV04wYzF0cFhTNWtaWE5qY21sd2RHbHZiaTVzWlc1bmRHZ2dQaUF4TlRBcFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNSelkyOXdaUzV3Y205cVpXTjBjMXRwWFM1a1pYTmpjbWx3ZEdsdmJpQTlJQ1J6WTI5d1pTNXdjbTlxWldOMGMxdHBYUzVrWlhOamNtbHdkR2x2Ymk1emRXSnpkSEpwYm1jb01Dd2dNVFV3S1NBcklGd2lMaTR1WENKY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZTd2djSEp2YW1WamRFbGtLVHNnSUZ4eVhHNTlYU2s3WEhKY2JseHlYRzR2THk4dkx5OHZMeTh2THk4dkx5OHZRMjl1ZEdGamRDOHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh5WEc1aGNIQXVZMjl1ZEhKdmJHeGxjaWduUTI5dWRHRmpkRU52Ym5SeWIyeHNaWEluTENCYkp5UnpZMjl3WlNjc0lDY2thSFIwY0Njc0lHWjFibU4wYVc5dUtDUnpZMjl3WlN3Z0pHaDBkSEFwSUh0Y2NseHVJQ0FrYzJOdmNHVXVkR0ZuYkdsdVpTQTlJQ2RVYUdseklHbHpJSFJvWlNCamIyNTBZV04wSUhCaFoyVXVKenRjY2x4dVhISmNiaUFnSkhOamIzQmxMbU52Ym5SaFkzUWdQU0I3ZlR0Y2NseHVYSEpjYmlBZ0pITmpiM0JsTG5ObGJtUWdQU0JtZFc1amRHbHZiaWhwYzFaaGJHbGtLU0I3WEhKY2JpQWdYSFF2TDFObGJtUWdaR0YwWVZ4eVhHNGdJQ0FnZG1GeUlHRnVkR2tnUFNBa2MyTnZjR1V1WTI5dWRHRmpkQzVoYm5ScElIeDhJR1poYkhObE8xeHlYRzRnSUNBZ2FXWWdLR0Z1ZEdrcFhISmNiaUFnSUNBZ0lISmxkSFZ5YmlBZ1ptRnNjMlU3WEhKY2JpQWdJQ0JjY2x4dUlDQmNkR2xtSUNocGMxWmhiR2xrS1NCN1hISmNiaUFnSUNBZ0lIWmhjaUJ3YUc5dVpTQTlJQ1J6WTI5d1pTNWpiMjUwWVdOMExuQm9iMjVsSUh4OElGd2lYQ0k3WEhKY2JpQWdJQ0FnSUhaaGNpQnNkbUpzYm1zZ1BTQWtjMk52Y0dVdVkyOXVkR0ZqZEM1aGJuUnBJSHg4SUZ3aVhDSTdYSEpjYmlBZ0lDQWdJSFpoY2lCa1lYUmhJRDBnZTF4eVhHNGdJQ0FnSUNBZ0lGd2libUZ0WlZ3aU9pQWtjMk52Y0dVdVkyOXVkR0ZqZEM1dVlXMWxMRnh5WEc0Z0lDQWdJQ0FnSUZ3aWNHaHZibVZjSWpvZ2NHaHZibVVzWEhKY2JpQWdJQ0FnSUNBZ1hDSmxiV0ZwYkZ3aU9pQWtjMk52Y0dVdVkyOXVkR0ZqZEM1bGJXRnBiQ3hjY2x4dUlDQWdJQ0FnSUNCY0ltMWxjM05oWjJWY0lqb2dKSE5qYjNCbExtTnZiblJoWTNRdWJXVnpjMkZuWlN4Y2NseHVJQ0FnSUNBZ0lDQmNJbXgyWW14dWExd2lPaUJzZG1Kc2Jtc2dJQ0FnSUNBZ0lGeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lGeDBYSFFrYUhSMGNDNXdiM04wS0NjdllYQnBMMk52Ym5SaFkzUjFjeThuTENCa1lYUmhLUzUwYUdWdUtHWjFibU4wYVc5dUtISmxjeWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWtjMk52Y0dVdVkyOXVkR0ZqZEM1dVlXMWxJRDBnWENKY0lqdGNjbHh1SUNBZ0lDQWdJQ0FnSkhOamIzQmxMbU52Ym5SaFkzUXVjR2h2Ym1VZ1BTQmNJbHdpTzF4eVhHNGdJQ0FnSUNBZ0lDQWtjMk52Y0dVdVkyOXVkR0ZqZEM1bGJXRnBiQ0E5SUZ3aVhDSTdYSEpjYmlBZ0lDQWdJQ0FnSUNSelkyOXdaUzVqYjI1MFlXTjBMbTFsYzNOaFoyVWdQU0JjSWx3aU8xeHlYRzRnSUNBZ0lDQWdJQ0FrYzJOdmNHVXVZMjl1ZEdGamRFWnZjbTB1SkhObGRGQnlhWE4wYVc1bEtDazdYSEpjYmlCY2NseHVJQ0FnSUNBZ0lIMHBPMXh5WEc0Z0lGeDBmVnh5WEc0Z0lIMDdYSEpjYm4xZEtUdGNjbHh1WEhKY2JpOHZMeTh2THk4dkx5OHZMeTh2THk5QlltOTFkQzh2THk4dkx5OHZMeTh2THk4dkx5OHZMeTh2TDF4eVhHNWhjSEF1WTI5dWRISnZiR3hsY2lnblFXSnZkWFJEYjI1MGNtOXNiR1Z5Snl3Z1d5Y2tjMk52Y0dVbkxDQm1kVzVqZEdsdmJpZ2tjMk52Y0dVcElIdGNjbHh1SUNBa2MyTnZjR1V1ZEdGbmJHbHVaU0E5SUNkVWFHbHpJR2x6SUhSb1pTQmhZbTkxZENCd1lXZGxMaWM3WEhKY2JuMWRLVHRjY2x4dVhISmNibVoxYm1OMGFXOXVJR1Z1WVdKc1pXUkdhV3gwWlhJb2RtRnNkV1VwSUh0Y2NseHVJQ0FnSUhKbGRIVnliaUIyWVd4MVpTNXBjMFZ1WVdKc1pXUTdYSEpjYm4xY2JtRndjQzVrYVhKbFkzUnBkbVVvSjNCeWIycGxZM1JOWlhSaEp5d2dablZ1WTNScGIyNG9LU0I3WEhKY2JseDBjbVYwZFhKdUlIdGNjbHh1WEhSY2RISmxjM1J5YVdOME9pQW5SU2NzWEhKY2JseDBYSFJ6WTI5d1pUb2dlMXh5WEc1Y2RGeDBYSFJ3Y205cVpXTjBPaUFuUFNkY2NseHVYSFJjZEgwc1hISmNibHgwWEhSeVpYQnNZV05sT2lCMGNuVmxMRnh5WEc1Y2RGeDBkR1Z0Y0d4aGRHVlZjbXc2SUZ3aWRtbGxkM012ZEdWdGNHeGhkR1Z6TDNCeWIycGxZM1JOWlhSaExtaDBiV3hjSWl4Y2NseHVYSFJjZEdOdmJuUnliMnhzWlhJNklHWjFibU4wYVc5dUtDUnpZMjl3WlNrZ2UxeHlYRzVjZEZ4MGZWeHlYRzVjZEgwN1hISmNibjBwTzF4dVlXNW5kV3hoY2k1dGIyUjFiR1VvSjFCeWIycGxZM1JHWVdOMGIzSjVKeXdnVzEwcExtWmhZM1J2Y25rb0oxQnliMnBsWTNSVFpYSjJhV05sSnl3Z1d5Y2thSFIwY0Njc0lHWjFibU4wYVc5dUtDUm9kSFJ3S1NCN1hHNWNiaUFnY21WMGRYSnVJSHRjYmlBZ0lDQm5aWFFnT2lCbWRXNWpkR2x2YmloallXeHNZbUZqYXl3Z2FXUXBJSHRjYmlBZ0lDQWdJR05oYkd4aVlXTnJJRDBnWTJGc2JHSmhZMnNnZkh3Z1ptRnNjMlU3WEc0Z0lDQWdJQ0JwWmlBb0lXTmhiR3hpWVdOcktWeHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3WEc1Y2JpQWdJQ0FnSUdsa0lEMGdhV1FnZkh3Z1ptRnNjMlU3WEc0Z0lDQWdJQ0JwWmlBb0lXbGtLVnh1SUNBZ0lDQWdJQ0FrYUhSMGNDNW5aWFFvSnk5aGNHa3ZjSEp2YW1WamRITW5LUzUwYUdWdUtHWjFibU4wYVc5dUtISmxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXeHNZbUZqYXloeVpYTXVaR0YwWVNrN1hHNGdJQ0FnSUNBZ0lIMGdLVHRjYmlBZ0lDQWdJR1ZzYzJWY2JpQWdJQ0FnSUNBZ0pHaDBkSEF1WjJWMEtDY3ZZWEJwTDNCeWIycGxZM1J6THljZ0t5QnBaQ2t1ZEdobGJpaG1kVzVqZEdsdmJpaHlaWE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyRnNiR0poWTJzb2NtVnpMbVJoZEdFcE8xeHVJQ0FnSUNBZ0lDQjlLVHRjYmlBZ0lDQjlYRzRnSUgxY2JuMWRLVHRjYmx4dUx5OGpJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJKaGMyVTJOQ3hsZVVveVdsaEtlbUZYT1hWSmFtOTZURU5LZW1JelZubFpNbFo2U1dwd1lrbHRSbmRqUXpWeFkzbEpjMGx0VG5aaWJsSjVZako0YzFwWVNucE1NRTUyWW01U2VXSXllSE5hV0VwNlRHMXdla2xwZDJsYVIyeDVXbGRPTUdGWVdteGplVGwzWTIwNWNWcFhUakJVVjFZd1dWTTFjV041U1hOSmJrNXNZMjVhY0ZreVZucE1NVUo1WWpKd2JGa3pVbFJhV0VveVlWZE9iRXh0Y0hwSmJEQnpTVzAxYUdKWFZucEphbkJpV0ZOM2FXSlhSbmRqUjJ4MVdqTk5hVTlwU2tKUlZVWkNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSVlU1Q1R6QkdRbEV3UlRkUlZVWkVVVlIwUWxGVlRrSlBNRVpDVVRCRk4xRlZSa1JSVkhSQ1VWVk9Razh3UmtKUk1FVTNVVlZHUkZGVWRFSlJWVTVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrUmhhMDVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSVlU1Q1R6QkdRbEV3UlRkUlZVWkVVVlIwUWxGVlRrSlBNRVpDVVRCRk4xRlZSa1JSVkhSQ1VWVk9Razh3UmtKUk1FVTNVVlZHUkZGVWRFSlJWVTVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSVlU1Q1R6QkdRbEV3UlRkUlZVWkVVVlIwUWxGVlRrSlBNRVpDVVRCRk4xRlZSa1JSVkhSQ1VWVk9Razh3UmtKUk1FVTNVVlZHUkZGVWRFSlJWVTVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSVlU1Q1R6QkdRbEV3UlRkUlZVWkVVVlIwUWxGVlRrSlBNRVpDVVRCRk4xRlZSa1JSVkhSQ1VWVk9Razh3UmtKUk1FVTNVVlZHUkZGVWRFSlJWVTVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWUmtSUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSTW5oSVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVVM1VWVkdSRkZVZEVKUlZVNUNUekJHUWxFd1JUZFJWVVpFVVZSMFFsRlZUa0pQTUVaQ1VUQkZOMUZWVGxsUlZIUkNVVlZPUWs4d1JrSlJNRVUzVVZWR1JGRlVkRUpSVlU1Q1R6QkdRbEV3UlRkUlZVWkVVVlIwUWxGVlRrSlBNRVpDVVRCRk4xRlZSa1JSVkhSQ1VWVk9Razh3UmtKUk1FVTNVVlZHUkZGVWRFSlJWVTVDVHpCR1FsRXdSVGRSVlVaRVVWUjBRbEZWVGtKUE1FWkNVVEJGTjFGVlJrUlJWSFJDVVZWT1FrOHdSa0pSTUVWcFRFTktiV0ZYZUd4SmFtOXBXVzVXZFZwSGVHeE1iWEI2U1dsM2FXTXlPVEZqYlU1c1l6Qk9kbUp1VW14aWJsRnBUMnh6YVdSdFJubEpSMFozWTBOQk9VbEhSblZhTTFaeldWaEpkV0pYT1d0a1YzaHNTME5rVG1WVlJuZGpRMk56U1VaemJtSnRaRk5pTTFZd1dsTmpjMGxEWkhWYU1FWjFZVmN4YUdSSFZXNU1RMEZ1WW0xa1ZXSXpWbXBoUTJOelNVTmtNV0ZUTldsaU1qa3dZek5TZVZsWVFXNU1RMEZ1V1cwNWRtUklUakJqYlVaM1ZFZHNibUZJVW1saU0yZHVURU5CYmxsWGRIWmFWelZ3V25rMWExcFhUbkphTTBwd1drTmpjMGxEWkZGamJUbHhXbGRPTUZKdFJtcGtSemw1WlZOa1pFdFVkR05qYkhoMVdFaEtZMkp0Um5kalF6VnFZakkxYldGWFkyOVhlV05yWTIwNU1XUkhWbEZqYlRreVlWZFNiR05wWTNOSlEyTnJZa2M1YWxsWVVuQmlNalZSWTIwNU1tRlhVbXhqYVdOelNVZGFNV0p0VGpCaFZ6bDFTME5TZVdJelZqQmFWa0o1WWpOYWNGcEhWbmxNUTBGcllrYzVhbGxZVW5CaU1qVlJZMjA1TW1GWFVteGphV3RuWlRGNGVWaEhOV05qYkhoMVNraEtkbVJZVW14VlNFcDJaRzFzYTFwWVNtTmpiSGgxV0VoS1kySnBRV2RKUTBGMlRIbENiMkl5TVd4SlNFSm9XakpXWTJOc2VIVkpRMEZuU1VNMU0yRkhWblZMUTJOMlNubDNaMlV4ZUhsWVJ6Um5TVU5CWjBsRFFXZEpTRkpzWWxoQ2MxbFlVbXhXV0VwelQybEJibVJ0Ykd4a00wMTJZVWM1ZEZwVE5XOWtSekZ6U25sNFkyTnNlSFZKUTBGblNVTkJaMGxEUW1waU1qVXdZMjA1YzJKSFZubFBhVUZ1VkZkR2NHSnJUblppYmxKNVlqSjRjMXBZU1c1WVNFcGpZbWxCWjBsRFFqbExWbmg1V0VjMVkyTnNlSFZKUTBGblNVTTFNMkZIVm5WTFEyTjJXVmRLZG1SWVVXNU1RMEkzV0VoS1kySnBRV2RKUTBGblNVTkJaMlJIVm5SalIzaG9aRWRXVm1OdGR6WkpRMlF5WVZkV00yTjVPV2haYlRreFpFTTFiMlJITVhOS2VYaGpZMng0ZFVsRFFXZEpRMEZuU1VOQ2FtSXlOVEJqYlRsellrZFdlVTlwUVc1UlYwcDJaRmhTUkdJeU5UQmpiVGx6WWtkV2VVb3hlSGxZUnpSblNVTkJaMlpUYkdOamJIaDFXRWhLWTJKcFFXZEpRMEYxWkRKb2JHSnBaMjVNTTBKNVlqSndiRmt6VW5wS2VYZG5aVEY0ZVZoSE5HZEpRMEZuU1VOQlowbElVbXhpV0VKeldWaFNiRlpZU25OUGFVRnVaRzFzYkdRelRYWmpTRXAyWVcxV2FtUklUWFZoU0ZKMFlrTmpjMWhJU21OaWFVRm5TVU5CWjBsRFFXZFpNamwxWkVoS2RtSkhlR3hqYW05blNqRkNlV0l5Y0d4Wk0xSkVZakkxTUdOdE9YTmlSMVo1U2pGNGVWaEhOR2RKUTBGblpsTnNZMk5zZUhWSlEwRm5TVVo0ZVZoSE5HZEpRMEZuVEc1a2IxcFhORzlLZVRsM1kyMDVjVnBYVGpCamVUZzJZVmRSZGtwNWQyZGxNWGg1V0VjMFowbERRV2RKUTBGblNVaFNiR0pZUW5OWldGSnNWbGhLYzA5cFFXNWtiV3hzWkROTmRtTklTblpoYlZacVpFTTFiMlJITVhOS2VYaGpZMng0ZFVsRFFXZEpRMEZuU1VOQ2FtSXlOVEJqYlRsellrZFdlVTlwUVc1VlNFcDJZVzFXYW1SRlRuWmlibEo1WWpKNGMxcFlTVzVNUTBKNVdsZDRkbGxYVWxCaWJFNXNXVmhLYW1GRWIyZGFiVVp6WXpKV09VdFdlSGxZUnpWalkyeDRkVWxEUVdkSlF6VXpZVWRXZFV0RFkzWlpNamwxWkVkR2FtUkRZM05KU0hSalkyeDRkVWxEUVdkSlEwRm5TVU5DTUZwWE1YZGlSMFl3V2xaV2VXSkViMmRLTTFwd1dsaGtla3d5VG5aaWJsSm9XVE5SZFdGSVVuUmlRMk56V0VoS1kySnBRV2RKUTBGblNVTkJaMWt5T1hWa1NFcDJZa2Q0YkdOcWIyZEtNRTUyWW01U2FGa3pVa1JpTWpVd1kyMDVjMkpIVm5sS01YaDVXRWMwWjBsRFFXZG1VMnMzV0VoS1kySnNlSGxZUnpScllrYzVhbGxZVW5CaU1qVlJZMjA1TW1GWFVteGphVFZ2WkVjeGMwNVZNWFphUjFWdlpFaEtNVnBUYXpkWVNFcGpZbXg0ZVZoSE5UbFlVMnMzU1dsM2FVeDVPSFpNZVRoMlRIazRka3g1T0haTWVUaDJUREF4YUdGWE5IWk1lVGgyVEhrNGRreDVPSFpNZVRoMlRIazRka3g1T0haTWVUbGpZMng0ZFZsWVFuZE1iVTUyWW01U2VXSXllSE5hV0VsdlNqQXhhR0ZYTlVSaU1qVXdZMjA1YzJKSFZubEtlWGRuVjNsamEyTXlUblpqUjFWdVRFTkJibFZJU25aaGJWWnFaRVpPYkdOdVduQlpNbFZ1VEVOQ2JXUlhOV3BrUjJ4MlltbG5hMk15VG5aalIxVnpTVVpDZVdJeWNHeFpNMUpVV2xoS01tRlhUbXhMVTBJM1dFaEtZMkpwUVdkWVNFcGpZbWxCWjJSdFJubEpTRUo1WWpKd2JGa3pVa3BhUTBFNVNVZGFhR0pJVG14UE1YaDVXRWMwWjBsR2VIbFlSelJuU1VaQ2VXSXljR3haTTFKVVdsaEtNbUZYVG14TWJXUnNaRU5vYldSWE5XcGtSMngyWW1sb2ExbFlVbWhMVTBJM1dFaEtZMkpwUVdkSlEwSnJXVmhTYUVsRU1HZGFSMFl3V1ZOQ09HWkRRamRtVkhSalkyeDRkVmhJU21OaWFVRm5TVU5DTWxsWVNXZGpNbmh3V2tkV2VrbEVNR2RLU0U1cVlqTkNiRXh1VG5OaFYxSnNZM2xCT1VsR2RHUlBNWGg1V0VjMFowbERRV2RZU0VwalltbEJaMGxEUW5CYWFVRnZXa2RHTUZsVGEyZGxNWGg1V0VjMFowbERRV2RKUTBKcldWaFNhRWxFTUdkYVIwWXdXVk0xYldGWGVEQmFXRWx2V2xjMWFGbHRlR3hhUlZwd1lraFNiR05wYXpkWVNFcGpZbWxCWjBsRFFXZEpSMUpvWkVkRmRXTXlPWGxrUTJodFpGYzFhbVJIYkhaaWFXaG9URWRKY0dWNVFubGFXRkl4WTIwMFoySnRWak5KUlZKb1pFZFZiMWxwTldwamJWWm9aRWRXYTFKSFJqQmFVMnRuVEZOQ2RWcFlZMmRTUjBZd1dsTm9hRXh0VG5sYVYwWXdXbGRTUlZsWVVteExWSE5uWmxOck4xaElTbU5pYVVGblNVTkJaMGxIUm5WYU0xWnpXVmhKZFZwdE9YbFNWMFpxWVVOb2ExbFlVbWhNUTBKdFpGYzFhbVJIYkhaaWFXZ3lXVmQ0TVZwVGQyZGhNbFkxUzFOQ04xaElTbU5pYVVGblNVTkJaMGxEUVdkak1uaHdXa2RXZWt4dVFqRmpNbWR2V1c1V2NHSkhVbFJpUjJ4cldsTm9NbGxYZURGYVV6VjBXVmRzZFZOWE1XaGFNbFYxWkZoS2MweERRakpaVjNneFdsTTFkRmxYYkhWVFZ6Rm9XakpWZFZreVJuZGtSMngyWW1scmNFOHhlSGxZUnpSblNVTkJaMGxEUWpsTFZIUmpZMng0ZFVsRFFXZEpTREZqWTJ4NGRVbERRamxNUTBKM1kyMDVjVnBYVGpCVFYxRndUekY0ZVZoSE5HZEpSbmg1V0VjMFowbERVbnBaTWpsM1dsTTFlbUpIYkd0YVZXeDFaRWRXZVdSdFJuTkpSREJuVFhwQmQwMUVjMmRKUm5oNVdFYzBaMGxHZUhsWVJ6Um5TVWRhTVdKdFRqQmhWemwxU1VkS01XRlhlR3RWTW5od1drZFZiMkZYTVdoYU1sVnpTVWRPYUdOSVVuQmlNalJ3U1VoMFkyTnNlSFZKUTBGblNVaGFhR05wUW5waVIyeHJXbE5CT1VsSWRHTmpiSGgxU1VOQlowbERRV2RLTW14MFdWZGtiRXA2YjJkaFZ6Rm9XakpWYzFoSVNtTmlhVUZuU1VOQlowbERaR3BaV0VJd1lWYzVkVXA2YjJkWk1rWjNaRWRzZG1Kc2VIbFlSelJuU1VOQloyWlRRV2RKUTBKalkyeDRkVWxEUVdkSlNFcHNaRWhXZVdKcFFucGlSMnhyV2xSMFkyTnNlSFZKUTBJNVR6RjRlVmhITlRsWVUyczNXRWhLWTJKc2VIbFlSelIyVEhrNGRreDVPSFpNZVRoMlRIazRka3g1T0haVlNFcDJZVzFXYW1SRE9IWk1lVGgyVEhrNGRreDVPSFpNZVRoMlRIazRka3g1T0haTU1YaDVXRWMxYUdOSVFYVlpNamwxWkVoS2RtSkhlR3hqYVdkdVZVaEtkbUZ0Vm1wa1JVNTJZbTVTZVdJeWVITmFXRWx1VEVOQ1lrcDVVbnBaTWpsM1dsTmpjMGxEWkZGamJUbHhXbGRPTUZVeVZubGtiV3hxV2xOamMwbERZMnRqYlRreFpFZFdVVmxZU21oaVdFMXVURU5DWTBscmVIQmFNbWd3V1cwNU5GaERTWE5KUjFveFltMU9NR0ZYT1hWTFExSjZXVEk1ZDFwVGQyZFZTRXAyWVcxV2FtUkdUbXhqYmxwd1dUSlZjMGxEVW5saU0xWXdXbFpDYUdOdFJuUmplWGRuVkVkc2JtRklVbWxpTTJkd1NVaDBZMk5zZUhWSlEwRnJZekpPZG1OSFZYVmtSMnd3WWtkVloxQlRRVzVWU0VwMllXMVdhbVJJVFc1UE1YaDVXRWMwWjBsRE9IWlpNamwxWXpJNWMxcFROWE5pTW1OdlZFZHNibUZJVW1saU0yZHdUekY0ZVZoSE5HZEpRMUo2V1RJNWQxcFROWFpqUjFaMVZFZHNibUZJVW1saU0yaE9ZakpTYUdKRFFUbEpSMW94WW0xT01HRlhPWFZKUTJod1ltMVNiR1ZEYTJkbE1YaDVXRWMwWjBsRFFXZFVSMnh1WVVoU2FXSXpaM1ZpTTBKc1ltc3hkbHBIUm5OTFExSjZXVEk1ZDFwVE5YZGpiVGx4V2xkT01FeHRSbXRhUld4MFdWZGtiR041ZDJkaFZ6VnJXbGhuY0U4eGVIbFlSelJuU1VneFkyTnNlSFZKUTBKalkyeDRkVWxEUWpKWldFbG5ZMGhLZG1GdFZtcGtSV3hyU1VRd1owcElTblprV0ZKc1ZVZEdlVmxYTVhwTWJXeHJTVWg0T0VsSFdtaGlTRTVzVHpGNGVWaEhOV05qYkhoMVNVTkNVV050T1hGYVYwNHdWVEpXZVdSdGJHcGFVelZ1V2xoUmIxcHVWblZaTTFKd1lqSTBiMXBIUmpCWlUydG5aVEY0ZVZoSE5HZEpRMEZuVEhrNWFtSXlOWHBpTW5oc1RHMTRkbHA1YUd0WldGSm9TMVIwWTJOc2VIVkpRMEZuU1VkU2FHUkhSV2RRVTBKcldWaFNhRWxJZURoSlNIUTVUekY0ZVZoSE5HZEpRMEZuV2tkR01GbFRRVGxKUjFKb1pFZEZkVnB0YkhOa1IxWjVTMGRXZFZsWFNuTmFWMUpIWVZkNE1GcFlTWEJQTVhoNVdFYzBaMGxEUVdkS1NFNXFZak5DYkV4dVFubGlNbkJzV1ROU2VrbEVNR2RhUjBZd1dWUjBZMk5zZUhWSlEwRm5TVVo0ZVZoSE5HZEpRMEZuWVZkWlowdEhVbWhrUjBWMVlrZFdkVm96VW05SlJEQTVVRk5CZUV0VFFqZFlTRXBqWW1sQlowbERRV2RKUTFKNldUSTVkMXBUTlhkamJUbHhXbGRPTUVsRU1HZGFSMFl3V1ZaemQxaFVkR05qYkhoMVNVTkJaMGxJTUdkYVYzaDZXbE5DTjFoSVNtTmlhVUZuU1VOQlowbERRV2RhYlRsNVNVTm9NbGxZU1dkaFUwRTVTVVJCTjBsSGEyZFFRMEZyWXpKT2RtTkhWWFZqU0VwMllXMVdhbVJJVFhWaVIxWjFXak5TYjA5NVFuQkxlWE53U1VoMFkyTnNlSFZKUTBGblNVTkJaMGxEUVdkSlEwRm5ZVmRaWjB0RFVucFpNamwzV2xNMWQyTnRPWEZhVjA0d1l6RjBjRmhUTld0YVdFNXFZMjFzZDJSSGJIWmlhVFZ6V2xjMWJtUkhaMmRRYVVGNFRsUkJjRmhJU21OaWFVRm5TVU5CWjBsRFFXZEpRMEZuU1VOU2Vsa3lPWGRhVXpWM1kyMDVjVnBYVGpCak1YUndXRk0xYTFwWVRtcGpiV3gzWkVkc2RtSnBRVGxKUTFKNldUSTVkMXBUTlhkamJUbHhXbGRPTUdNeGRIQllVelZyV2xoT2FtTnRiSGRrUjJ4MlltazFlbVJYU25wa1NFcHdZbTFqYjAxRGQyZE5WRlYzUzFOQmNrbEdkMmxNYVRSMVdFTktZMk5zZUhWSlEwRm5TVU5CWjBsRFFqbFlTRXBqWW1sQlowbERRamxZU0VwalltbEJaMlpUZDJkalNFcDJZVzFXYW1SRmJHdExWSE5uU1VaNGVWaEhOVGxZVTJzM1dFaEtZMkpzZUhsWVJ6UjJUSGs0ZGt4NU9IWk1lVGgyVEhrNGRreDVPSFpSTWpsMVpFZEdhbVJET0haTWVUaDJUSGs0ZGt4NU9IWk1lVGgyVEhrNGRreDVPSFpNTVhoNVdFYzFhR05JUVhWWk1qbDFaRWhLZG1KSGVHeGphV2R1VVRJNWRXUkhSbXBrUlU1MlltNVNlV0l5ZUhOYVdFbHVURU5DWWtwNVVucFpNamwzV2xOamMwbERZMnRoU0ZJd1kwTmpjMGxIV2pGaWJVNHdZVmM1ZFV0RFVucFpNamwzV2xOM1owcEhhREJrU0VGd1NVaDBZMk5zZUhWSlEwRnJZekpPZG1OSFZYVmtSMFp1WWtkc2RWcFRRVGxKUTJSVllVZHNla2xIYkhwSlNGSnZXbE5DYW1JeU5UQlpWMDR3U1VoQ2FGb3lWWFZLZW5SalkyeDRkVmhJU21OaWFVRm5Ta2hPYW1JelFteE1iVTUyWW01U2FGa3pVV2RRVTBJM1psUjBZMk5zZUhWWVNFcGpZbWxCWjBwSVRtcGlNMEpzVEc1T2JHSnRVV2RRVTBKdFpGYzFhbVJIYkhaaWFXaHdZekZhYUdKSGJHdExVMEkzV0VoS1kySnBRV2RZU0ZGMlRERk9iR0p0VVdkYVIwWXdXVlo0ZVZoSE5HZEpRMEZuWkcxR2VVbEhSblZrUjJ0blVGTkJhMk15VG5aalIxVjFXVEk1ZFdSSFJtcGtRelZvWW01U2NFbEllRGhKUjFwb1lraE9iRTh4ZUhsWVJ6Um5TVU5CWjJGWFdXZExSMFoxWkVkcmNGaElTbU5pYVVGblNVTkJaMGxJU214a1NGWjVZbWxCWjFwdFJuTmpNbFUzV0VoS1kySnBRV2RKUTBKalkyeDRkVWxEUW1Oa1IyeHRTVU5vY0dNeFdtaGlSMnhyUzFOQ04xaElTbU5pYVVGblNVTkJaMGxJV21oamFVSjNZVWM1ZFZwVFFUbEpRMUo2V1RJNWQxcFROV3BpTWpVd1dWZE9NRXh1UW05aU1qVnNTVWg0T0VsR2QybFlRMGszV0VoS1kySnBRV2RKUTBGblNVaGFhR05wUW5Oa2JVcHpZbTF6WjFCVFFXdGpNazUyWTBkVmRWa3lPWFZrUjBacVpFTTFhR0p1VW5CSlNIZzRTVVozYVZoRFNUZFlTRXBqWW1sQlowbERRV2RKU0Zwb1kybENhMWxZVW1oSlJEQm5aVEY0ZVZoSE5HZEpRMEZuU1VOQlowbEdkMmxpYlVaMFdsWjNhVTlwUVd0ak1rNTJZMGRWZFZreU9YVmtSMFpxWkVNMWRWbFhNV3hNUm5oNVdFYzBaMGxEUVdkSlEwRm5TVVozYVdOSGFIWmliVlpqU1dwdloyTkhhSFppYlZWeldFaEtZMkpwUVdkSlEwRm5TVU5CWjFoRFNteGlWMFp3WWtaM2FVOXBRV3RqTWs1MlkwZFZkVmt5T1hWa1IwWnFaRU0xYkdKWFJuQmlRM2hqWTJ4NGRVbERRV2RKUTBGblNVTkNZMGx0TVd4ak0wNW9XakpXWTBscWIyZEtTRTVxWWpOQ2JFeHRUblppYmxKb1dUTlJkV0pYVm5wak1rWnVXbE40WTJOc2VIVkpRMEZuU1VOQlowbERRbU5KYlhneVdXMTRkV0V4ZDJsUGFVSnpaRzFLYzJKdGMyZEpRMEZuU1VOQlowbEdlSGxZUnpSblNVTkJaMGxEUWpsWVNFcGpZbWxCWjBsR2VEQllTRkZyWVVoU01HTkROWGRpTTA0d1MwTmpkbGxZUW5CTU1rNTJZbTVTYUZrelVqRmplVGh1VEVOQ2ExbFlVbWhMVXpVd1lVZFdkVXRIV2pGaWJVNHdZVmM1ZFV0SVNteGplV3RuWlRGNGVWaEhOR2RKUTBGblNVTkJaMGxEUVd0ak1rNTJZMGRWZFZreU9YVmtSMFpxWkVNMWRWbFhNV3hKUkRCbldFTktZMGxxZEdOamJIaDFTVU5CWjBsRFFXZEpRMEZuU2toT2FtSXpRbXhNYlU1MlltNVNhRmt6VVhWalIyaDJZbTFWWjFCVFFtTkpiSGRwVHpGNGVWaEhOR2RKUTBGblNVTkJaMGxEUVd0ak1rNTJZMGRWZFZreU9YVmtSMFpxWkVNMWJHSlhSbkJpUTBFNVNVWjNhVmhEU1RkWVNFcGpZbWxCWjBsRFFXZEpRMEZuU1VOU2Vsa3lPWGRhVXpWcVlqSTFNRmxYVGpCTWJURnNZek5PYUZveVZXZFFVMEpqU1d4M2FVOHhlSGxZUnpSblNVTkJaMGxEUVdkSlEwRnJZekpPZG1OSFZYVlpNamwxWkVkR2FtUkZXblpqYlRCMVNraE9iR1JHUW5saFdFNHdZVmMxYkV0RGF6ZFlTRXBqWW1sQ1kyTnNlSFZKUTBGblNVTkJaMGxJTUhCUE1YaDVXRWMwWjBsR2VEQm1Wbmg1V0VjMFowbElNRGRZU0VwalltNHhaRXRVZEdOamJIaDFXRWhLWTJKcE9IWk1lVGgyVEhrNGRreDVPSFpNZVRoMlRIazVRbGx0T1RGa1F6aDJUSGs0ZGt4NU9IWk1lVGgyVEhrNGRreDVPSFpNZVRoMlRERjRlVmhITldoalNFRjFXVEk1ZFdSSVNuWmlSM2hzWTJsbmJsRlhTblprV0ZKRVlqSTFNR050T1hOaVIxWjVTbmwzWjFkNVkydGpNazUyWTBkVmJreERRbTFrVnpWcVpFZHNkbUpwWjJ0ak1rNTJZMGRWY0VsSWRHTmpiSGgxU1VOQmEyTXlUblpqUjFWMVpFZEdibUpIYkhWYVUwRTVTVU5rVldGSGJIcEpSMng2U1VoU2IxcFRRbWhaYlRreFpFTkNkMWxYWkd4TWFXTTNXRWhLWTJKdU1XUkxWSFJqWTJ4NGRWaElTbU5pYlZveFltMU9NR0ZYT1hWSlIxWjFXVmRLYzFwWFVrZGhWM2d3V2xoSmIyUnRSbk5rVjFWd1NVaDBZMk5zZUhWSlEwRm5TVWhLYkdSSVZubGlhVUl5V1ZkNE1WcFROWEJqTUZaMVdWZEtjMXBYVVRkWVNFcGpZbTR3YVV4RFNtaGpTRUYxV2tkc2VWcFhUakJoV0Zwc1MwTmtkMk50T1hGYVYwNHdWRmRXTUZsVFkzTkpSMW94WW0xT01HRlhPWFZMUTJ0blpURjRlVmhITldOa1NFcHNaRWhXZVdKcFFqZFlTRXBqWW14NE1GaElVbmxhV0U0d1kyMXNhbVJFYjJkS01GVnVURVo0ZVZoSE5XTmtSbmd3WXpKT2RtTkhWVFpKU0hSalkyeDRkVmhJVW1Oa1JuZ3dZMGhLZG1GdFZtcGtSRzluU25vd2JsaElTbU5pYkhnd1dFaFNPVXhHZUhsWVJ6VmpaRVo0TUdOdFZuZGlSMFpxV2xSdloyUklTakZhVTNoalkyeDRkVmhJVW1Oa1NGSnNZbGhDYzFsWVVteFdXRXB6VDJsQ1kwbHVXbkJhV0dSNlRETlNiR0pZUW5OWldGSnNZM2s1ZDJOdE9YRmFWMDR3VkZkV01GbFROVzlrUnpGeldFTkpjMWhJU21OaWJIZ3dXRWhTYW1JeU5UQmpiVGx6WWtkV2VVOXBRbTFrVnpWcVpFZHNkbUpwWjJ0ak1rNTJZMGRWY0VsSWRHTmpiSGgxV0VoU1kyUklNV05qYkhoMVdFaFNPVTh4ZUhsWVJ6VTVTMVJ6YVV4RFNtaGliV1F4WWtkR2VVeHRNWFphU0ZaeldsTm5ibFZJU25aaGJWWnFaRVZhYUZrelVuWmpibXR1VEVOQ1lsaFRhM1ZhYlVacVpFYzVlV1ZUWjI1VlNFcDJZVzFXYW1SR1RteGpibHB3V1RKVmJreERRbUpLZVZKdlpFaFNkMHA1ZDJkYWJsWjFXVE5TY0dJeU5HOUtSMmd3WkVoQmNFbElkR05pYkhoMVNVTkNlVnBZVWpGamJUUm5aVEY0ZFVsRFFXZEpSMlJzWkVOQk5rbEhXakZpYlU0d1lWYzVkVXRIVG1oaVIzaHBXVmRPY2t4RFFuQmFRMnRuWlRGNGRVbERRV2RKUTBGbldUSkdjMkpIU21oWk1uTm5VRk5DYWxsWGVITlpiVVpxWVhsQ09HWkRRbTFaVjNoNldsUjBZMkpwUVdkSlEwRm5TVWRzYlVsRFoyaFpNa1p6WWtkS2FGa3ljM0JZUnpSblNVTkJaMGxEUVdkSlNFcHNaRWhXZVdKcFFtMVpWM2g2V2xSMFkySnNlSFZKUTBGblNVTkJaMkZYVVdkUVUwSndXa05DT0daRFFtMVpWM2g2V2xSMFkySnBRV2RKUTBGblNVZHNiVWxEWjJoaFYxRndXRWMwWjBsRFFXZEpRMEZuU1VOU2IyUklVbmRNYldSc1pFTm5ia3d5Um5kaFV6bDNZMjA1Y1ZwWFRqQmplV053VEc1U2IxcFhORzlhYmxaMVdUTlNjR0l5Tkc5amJWWjZTMU5DTjFoSE5HZEpRMEZuU1VOQlowbERRV2RqYlZZd1pGaEtkVWxIVG1oaVIzaHBXVmRPY2t0SVNteGplVFZyV1ZoU2FFdFVkR05pYVVGblNVTkJaMGxEUVdkbVUwRndUekY0ZFVsRFFXZEpRMEZuV2xkNGVscFdlSFZKUTBGblNVTkJaMGxEUVd0aFNGSXdZME0xYmxwWVVXOUtlVGxvWTBkcmRtTklTblpoYlZacVpFaE5ka3A1UVhKSlIyeHJTMU0xTUdGSFZuVkxSMW94WW0xT01HRlhPWFZMU0Vwc1kzbHJaMlV4ZUhWSlEwRm5TVU5CWjBsRFFXZEpTRXBzWkVoV2VXSnBRbXBaVjNoeldXMUdhbUY1YUhsYVdFMTFXa2RHTUZsVGF6ZFlSelJuU1VOQlowbERRV2RKU0RCd1R6RjRkVWxEUVdkSlNERmpZbWxCWjJaV2VIVm1WakJ3VHpGNGRVbHNNSE5KYms1MlpGaEthbHBXU25aaU0xRnBUMmxKZG1NeU9URmpiVTVzVEhsS09WeHVJaXdpTHk4dkx5OHZMeTh2THk4dkx5OHZMMDFoYVc0dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OWNjbHh1WVhCd0xtTnZiblJ5YjJ4c1pYSW9KMDFoYVc1RGIyNTBjbTlzYkdWeUp5d2dXeWNrYzJOdmNHVW5MQ0FuVUhKdmFtVmpkRk5sY25acFkyVW5MQ0JtZFc1amRHbHZiaWdrYzJOdmNHVXNJRkJ5YjJwbFkzUlRaWEoyYVdObEtTQjdYSEpjYmlBZ1hISmNiaUFnZG1GeUlIQnliMnBsWTNSSlpDQTlJR1poYkhObE8xeHlYRzRnSUZ4eVhHNGdJRkJ5YjJwbFkzUlRaWEoyYVdObExtZGxkQ2htZFc1amRHbHZiaWhrWVhSaEtTQjdYSEpjYmlBZ0lDQmtZWFJoSUQwZ1pHRjBZU0I4ZkNCN2ZUdGNjbHh1WEhKY2JpQWdJQ0IyWVhJZ2MyeHBaR1Z6SUQwZ0pITmpiM0JsTG5Oc2FXUmxjeUE5SUZ0ZE8xeHlYRzRnSUNBZ1hISmNiaUFnSUNCcFppQW9aR0YwWVNrZ2UxeHlYRzRnSUNBZ0lDQmtZWFJoSUQwZ1pHRjBZUzVtYVd4MFpYSW9aVzVoWW14bFpFWnBiSFJsY2lrN1hISmNiaUFnSUNBZ0lHUmhkR0V1YzI5eWRDaG1kVzVqZEdsdmJpaGhMR0lwZXlCeVpYUjFjbTRnYm1WM0lFUmhkR1VvWWk1amNtVmhkR1ZrUkdGMFpTa2dMU0J1WlhjZ1JHRjBaU2hoTG1OeVpXRjBaV1JFWVhSbEtUc2dmU2s3WEhKY2JpQWdJQ0FnSUdGdVozVnNZWEl1Wm05eVJXRmphQ2hrWVhSaExDQm1kVzVqZEdsdmJpaDJZV3gxWlN3Z2EyVjVLU0I3WEhKY2JpQWdJQ0FnSUNBZ2MyeHBaR1Z6TG5CMWMyZ29ZblZwYkdSVGJHbGtaU2gyWVd4MVpTNXRZV2x1U1cxaFoyVXVkWEpzTENCMllXeDFaUzV0WVdsdVNXMWhaMlV1WTJGd2RHbHZiaWtwTzF4eVhHNGdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOUxDQndjbTlxWldOMFNXUXBPMXh5WEc0Z0lGeHlYRzRnSUNSelkyOXdaUzV6Ykdsa1pVbHVkR1Z5ZG1Gc0lEMGdNekF3TURzZ0lGeHlYRzRnSUZ4eVhHNGdJR1oxYm1OMGFXOXVJR0oxYVd4a1UyeHBaR1VvYVcxaFoyVXNJR05oY0hScGIyNHBJSHRjY2x4dUlDQWdJSFpoY2lCemJHbGtaU0E5SUh0Y2NseHVJQ0FnSUNBZ0oybHRZV2RsSnpvZ2FXMWhaMlVzWEhKY2JpQWdJQ0FnSUNkallYQjBhVzl1SnpvZ1kyRndkR2x2Ymx4eVhHNGdJQ0FnZlNBZ0lDQmNjbHh1SUNBZ0lISmxkSFZ5YmlCemJHbGtaVHRjY2x4dUlDQjlPMXh5WEc1OVhTazdYSEpjYmx4eVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dlVISnZhbVZqZEM4dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHlYRzVoY0hBdVkyOXVkSEp2Ykd4bGNpZ25VSEp2YW1WamRFTnZiblJ5YjJ4c1pYSW5MQ0JiSnlSelkyOXdaU2NzSUNkUWNtOXFaV04wVTJWeWRtbGpaU2NzSUNja2NtOTFkR1ZRWVhKaGJYTW5MQ0JjSWt4cFoyaDBZbTk0WENJc0lHWjFibU4wYVc5dUtDUnpZMjl3WlN3Z1VISnZhbVZqZEZObGNuWnBZMlVzSUNSeWIzVjBaVkJoY21GdGN5d2dUR2xuYUhSaWIzZ3BJSHRjY2x4dUlDQWtjMk52Y0dVdWRHbDBiR1VnUFNBblVISnZhbVZqZEhNbk8xeHlYRzRnSUM4dlkyOXVjMjlzWlM1c2IyY29UR2xuYUhSaWIzZ3BPMXh5WEc0Z0lDUnpZMjl3WlM1dmNHVnVUR2xuYUhSaWIzaE5iMlJoYkNBOUlHWjFibU4wYVc5dUlDaHBibVJsZUNrZ2UxeHlYRzRnSUNBZ1RHbG5hSFJpYjNndWIzQmxiazF2WkdGc0tDUnpZMjl3WlM1d2NtOXFaV04wTG1Ga1pFbHRZV2RsY3l3Z2FXNWtaWGdwTzF4eVhHNGdJSDFjY2x4dUlDQmNjbHh1SUNCMllYSWdjSEp2YW1WamRFbGtJRDBnSkhKdmRYUmxVR0Z5WVcxekxtbGtJSHg4SUdaaGJITmxPMXh5WEc1Y2NseHVJQ0JRY205cVpXTjBVMlZ5ZG1salpTNW5aWFFvWm5WdVkzUnBiMjRvWkdGMFlTa2dlMXh5WEc0Z0lDQWdMeTlqYjI1emIyeGxMbXh2Wnloa1lYUmhLVHRjY2x4dUlDQWdJR1JoZEdFZ1BTQmtZWFJoSUh4OElIdDlPMXh5WEc0Z0lDQWdaR0YwWVNBOUlHUmhkR0V1Wm1sc2RHVnlLR1Z1WVdKc1pXUkdhV3gwWlhJcE8xeHlYRzRnSUNBZ0pITmpiM0JsTG5CeWIycGxZM1J6SUQwZ1pHRjBZVHRjY2x4dUlDQWdJRnh5WEc0Z0lDQWdhV1lnS0dSaGRHRXViR1Z1WjNSb0lEMDlQU0F4S1NCN1hISmNiaUFnSUNBZ0lDUnpZMjl3WlM1d2NtOXFaV04wSUQwZ1pHRjBZVnN3WFR0Y2NseHVJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQWtjMk52Y0dVdWNISnZhbVZqZEhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSelkyOXdaUzV3Y205cVpXTjBjMXRwWFM1a1pYTmpjbWx3ZEdsdmJpNXNaVzVuZEdnZ1BpQXhOVEFwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ1J6WTI5d1pTNXdjbTlxWldOMGMxdHBYUzVrWlhOamNtbHdkR2x2YmlBOUlDUnpZMjl3WlM1d2NtOXFaV04wYzF0cFhTNWtaWE5qY21sd2RHbHZiaTV6ZFdKemRISnBibWNvTUN3Z01UVXdLU0FySUZ3aUxpNHVYQ0pjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnZlN3Z2NISnZhbVZqZEVsa0tUc2dJRnh5WEc1OVhTazdYSEpjYmx4eVhHNHZMeTh2THk4dkx5OHZMeTh2THk4dlEyOXVkR0ZqZEM4dkx5OHZMeTh2THk4dkx5OHZMeTh2THk4dkwxeHlYRzVoY0hBdVkyOXVkSEp2Ykd4bGNpZ25RMjl1ZEdGamRFTnZiblJ5YjJ4c1pYSW5MQ0JiSnlSelkyOXdaU2NzSUNja2FIUjBjQ2NzSUdaMWJtTjBhVzl1S0NSelkyOXdaU3dnSkdoMGRIQXBJSHRjY2x4dUlDQWtjMk52Y0dVdWRHRm5iR2x1WlNBOUlDZFVhR2x6SUdseklIUm9aU0JqYjI1MFlXTjBJSEJoWjJVdUp6dGNjbHh1WEhKY2JpQWdKSE5qYjNCbExtTnZiblJoWTNRZ1BTQjdmVHRjY2x4dVhISmNiaUFnSkhOamIzQmxMbk5sYm1RZ1BTQm1kVzVqZEdsdmJpaHBjMVpoYkdsa0tTQjdYSEpjYmlBZ1hIUXZMMU5sYm1RZ1pHRjBZVnh5WEc0Z0lDQWdkbUZ5SUdGdWRHa2dQU0FrYzJOdmNHVXVZMjl1ZEdGamRDNWhiblJwSUh4OElHWmhiSE5sTzF4eVhHNGdJQ0FnYVdZZ0tHRnVkR2twWEhKY2JpQWdJQ0FnSUhKbGRIVnliaUFnWm1Gc2MyVTdYSEpjYmlBZ0lDQmNjbHh1SUNCY2RHbG1JQ2hwYzFaaGJHbGtLU0I3WEhKY2JpQWdJQ0FnSUhaaGNpQndhRzl1WlNBOUlDUnpZMjl3WlM1amIyNTBZV04wTG5Cb2IyNWxJSHg4SUZ3aVhDSTdYSEpjYmlBZ0lDQWdJSFpoY2lCc2RtSnNibXNnUFNBa2MyTnZjR1V1WTI5dWRHRmpkQzVoYm5ScElIeDhJRndpWENJN1hISmNiaUFnSUNBZ0lIWmhjaUJrWVhSaElEMGdlMXh5WEc0Z0lDQWdJQ0FnSUZ3aWJtRnRaVndpT2lBa2MyTnZjR1V1WTI5dWRHRmpkQzV1WVcxbExGeHlYRzRnSUNBZ0lDQWdJRndpY0dodmJtVmNJam9nY0dodmJtVXNYSEpjYmlBZ0lDQWdJQ0FnWENKbGJXRnBiRndpT2lBa2MyTnZjR1V1WTI5dWRHRmpkQzVsYldGcGJDeGNjbHh1SUNBZ0lDQWdJQ0JjSW0xbGMzTmhaMlZjSWpvZ0pITmpiM0JsTG1OdmJuUmhZM1F1YldWemMyRm5aU3hjY2x4dUlDQWdJQ0FnSUNCY0lteDJZbXh1YTF3aU9pQnNkbUpzYm1zZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUZ4MFhIUWthSFIwY0M1d2IzTjBLQ2N2WVhCcEwyTnZiblJoWTNSMWN5OG5MQ0JrWVhSaEtTNTBhR1Z1S0daMWJtTjBhVzl1S0hKbGN5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBa2MyTnZjR1V1WTI5dWRHRmpkQzV1WVcxbElEMGdYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdKSE5qYjNCbExtTnZiblJoWTNRdWNHaHZibVVnUFNCY0lsd2lPMXh5WEc0Z0lDQWdJQ0FnSUNBa2MyTnZjR1V1WTI5dWRHRmpkQzVsYldGcGJDQTlJRndpWENJN1hISmNiaUFnSUNBZ0lDQWdJQ1J6WTI5d1pTNWpiMjUwWVdOMExtMWxjM05oWjJVZ1BTQmNJbHdpTzF4eVhHNGdJQ0FnSUNBZ0lDQWtjMk52Y0dVdVkyOXVkR0ZqZEVadmNtMHVKSE5sZEZCeWFYTjBhVzVsS0NrN1hISmNiaUJjY2x4dUlDQWdJQ0FnSUgwcE8xeHlYRzRnSUZ4MGZWeHlYRzRnSUgwN1hISmNibjFkS1R0Y2NseHVYSEpjYmk4dkx5OHZMeTh2THk4dkx5OHZMeTlCWW05MWRDOHZMeTh2THk4dkx5OHZMeTh2THk4dkx5OHZMMXh5WEc1aGNIQXVZMjl1ZEhKdmJHeGxjaWduUVdKdmRYUkRiMjUwY205c2JHVnlKeXdnV3lja2MyTnZjR1VuTENCbWRXNWpkR2x2Ymlna2MyTnZjR1VwSUh0Y2NseHVJQ0FrYzJOdmNHVXVkR0ZuYkdsdVpTQTlJQ2RVYUdseklHbHpJSFJvWlNCaFltOTFkQ0J3WVdkbExpYzdYSEpjYm4xZEtUdGNjbHh1WEhKY2JtWjFibU4wYVc5dUlHVnVZV0pzWldSR2FXeDBaWElvZG1Gc2RXVXBJSHRjY2x4dUlDQWdJSEpsZEhWeWJpQjJZV3gxWlM1cGMwVnVZV0pzWldRN1hISmNibjBpTENKaGNIQXVaR2x5WldOMGFYWmxLQ2R3Y205cVpXTjBUV1YwWVNjc0lHWjFibU4wYVc5dUtDa2dlMXh5WEc1Y2RISmxkSFZ5YmlCN1hISmNibHgwWEhSeVpYTjBjbWxqZERvZ0owVW5MRnh5WEc1Y2RGeDBjMk52Y0dVNklIdGNjbHh1WEhSY2RGeDBjSEp2YW1WamREb2dKejBuWEhKY2JseDBYSFI5TEZ4eVhHNWNkRngwY21Wd2JHRmpaVG9nZEhKMVpTeGNjbHh1WEhSY2RIUmxiWEJzWVhSbFZYSnNPaUJjSW5acFpYZHpMM1JsYlhCc1lYUmxjeTl3Y205cVpXTjBUV1YwWVM1b2RHMXNYQ0lzWEhKY2JseDBYSFJqYjI1MGNtOXNiR1Z5T2lCbWRXNWpkR2x2Ymlna2MyTnZjR1VwSUh0Y2NseHVYSFJjZEgxY2NseHVYSFI5TzF4eVhHNTlLVHNpTENKaGJtZDFiR0Z5TG0xdlpIVnNaU2duVUhKdmFtVmpkRVpoWTNSdmNua25MQ0JiWFNrdVptRmpkRzl5ZVNnblVISnZhbVZqZEZObGNuWnBZMlVuTENCYkp5Um9kSFJ3Snl3Z1puVnVZM1JwYjI0b0pHaDBkSEFwSUh0Y2JseHVJQ0J5WlhSMWNtNGdlMXh1SUNBZ0lHZGxkQ0E2SUdaMWJtTjBhVzl1S0dOaGJHeGlZV05yTENCcFpDa2dlMXh1SUNBZ0lDQWdZMkZzYkdKaFkyc2dQU0JqWVd4c1ltRmpheUI4ZkNCbVlXeHpaVHRjYmlBZ0lDQWdJR2xtSUNnaFkyRnNiR0poWTJzcFhHNGdJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHRjYmx4dUlDQWdJQ0FnYVdRZ1BTQnBaQ0I4ZkNCbVlXeHpaVHRjYmlBZ0lDQWdJR2xtSUNnaGFXUXBYRzRnSUNBZ0lDQWdJQ1JvZEhSd0xtZGxkQ2duTDJGd2FTOXdjbTlxWldOMGN5Y3BMblJvWlc0b1puVnVZM1JwYjI0b2NtVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOaGJHeGlZV05yS0hKbGN5NWtZWFJoS1R0Y2JpQWdJQ0FnSUNBZ2ZTQXBPMXh1SUNBZ0lDQWdaV3h6WlZ4dUlDQWdJQ0FnSUNBa2FIUjBjQzVuWlhRb0p5OWhjR2t2Y0hKdmFtVmpkSE12SnlBcklHbGtLUzUwYUdWdUtHWjFibU4wYVc5dUtISmxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCallXeHNZbUZqYXloeVpYTXVaR0YwWVNrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZWMHBPMXh1SWwwc0luTnZkWEpqWlZKdmIzUWlPaUl2YzI5MWNtTmxMeUo5XG4iLCIvLy8vLy8vLy8vLy8vLy8vTWFpbi8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG5hcHAuY29udHJvbGxlcignTWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICdQcm9qZWN0U2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgUHJvamVjdFNlcnZpY2UpIHtcclxuICBcclxuICB2YXIgcHJvamVjdElkID0gZmFsc2U7XHJcbiAgXHJcbiAgUHJvamVjdFNlcnZpY2UuZ2V0KGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgIGRhdGEgPSBkYXRhIHx8IHt9O1xyXG5cclxuICAgIHZhciBzbGlkZXMgPSAkc2NvcGUuc2xpZGVzID0gW107XHJcbiAgICBcclxuICAgIGlmIChkYXRhKSB7XHJcbiAgICAgIGRhdGEgPSBkYXRhLmZpbHRlcihlbmFibGVkRmlsdGVyKTtcclxuICAgICAgZGF0YS5zb3J0KGZ1bmN0aW9uKGEsYil7IHJldHVybiBuZXcgRGF0ZShiLmNyZWF0ZWREYXRlKSAtIG5ldyBEYXRlKGEuY3JlYXRlZERhdGUpOyB9KTtcclxuICAgICAgYW5ndWxhci5mb3JFYWNoKGRhdGEsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcclxuICAgICAgICBzbGlkZXMucHVzaChidWlsZFNsaWRlKHZhbHVlLm1haW5JbWFnZS51cmwsIHZhbHVlLm1haW5JbWFnZS5jYXB0aW9uKSk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sIHByb2plY3RJZCk7XHJcbiAgXHJcbiAgJHNjb3BlLnNsaWRlSW50ZXJ2YWwgPSAzMDAwOyAgXHJcbiAgXHJcbiAgZnVuY3Rpb24gYnVpbGRTbGlkZShpbWFnZSwgY2FwdGlvbikge1xyXG4gICAgdmFyIHNsaWRlID0ge1xyXG4gICAgICAnaW1hZ2UnOiBpbWFnZSxcclxuICAgICAgJ2NhcHRpb24nOiBjYXB0aW9uXHJcbiAgICB9ICAgIFxyXG4gICAgcmV0dXJuIHNsaWRlO1xyXG4gIH07XHJcbn1dKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy9Qcm9qZWN0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdQcm9qZWN0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJ1Byb2plY3RTZXJ2aWNlJywgJyRyb3V0ZVBhcmFtcycsIFwiTGlnaHRib3hcIiwgZnVuY3Rpb24oJHNjb3BlLCBQcm9qZWN0U2VydmljZSwgJHJvdXRlUGFyYW1zLCBMaWdodGJveCkge1xyXG4gICRzY29wZS50aXRsZSA9ICdQcm9qZWN0cyc7XHJcbiAgLy9jb25zb2xlLmxvZyhMaWdodGJveCk7XHJcbiAgJHNjb3BlLm9wZW5MaWdodGJveE1vZGFsID0gZnVuY3Rpb24gKGluZGV4KSB7XHJcbiAgICBMaWdodGJveC5vcGVuTW9kYWwoJHNjb3BlLnByb2plY3QuYWRkSW1hZ2VzLCBpbmRleCk7XHJcbiAgfVxyXG4gIFxyXG4gIHZhciBwcm9qZWN0SWQgPSAkcm91dGVQYXJhbXMuaWQgfHwgZmFsc2U7XHJcblxyXG4gIFByb2plY3RTZXJ2aWNlLmdldChmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgZGF0YSA9IGRhdGEgfHwge307XHJcbiAgICBkYXRhID0gZGF0YS5maWx0ZXIoZW5hYmxlZEZpbHRlcik7XHJcbiAgICAkc2NvcGUucHJvamVjdHMgPSBkYXRhO1xyXG4gICAgXHJcbiAgICBpZiAoZGF0YS5sZW5ndGggPT09IDEpIHtcclxuICAgICAgJHNjb3BlLnByb2plY3QgPSBkYXRhWzBdO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8ICRzY29wZS5wcm9qZWN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uLmxlbmd0aCA+IDE1MClcclxuICAgICAgICAgICAgJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uID0gJHNjb3BlLnByb2plY3RzW2ldLmRlc2NyaXB0aW9uLnN1YnN0cmluZygwLCAxNTApICsgXCIuLi5cIlxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICB9LCBwcm9qZWN0SWQpOyAgXHJcbn1dKTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy9Db250YWN0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdDb250YWN0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCkge1xyXG4gICRzY29wZS50YWdsaW5lID0gJ1RoaXMgaXMgdGhlIGNvbnRhY3QgcGFnZS4nO1xyXG5cclxuICAkc2NvcGUuY29udGFjdCA9IHt9O1xyXG5cclxuICAkc2NvcGUuc2VuZCA9IGZ1bmN0aW9uKGlzVmFsaWQpIHtcclxuICBcdC8vU2VuZCBkYXRhXHJcbiAgICB2YXIgYW50aSA9ICRzY29wZS5jb250YWN0LmFudGkgfHwgZmFsc2U7XHJcbiAgICBpZiAoYW50aSlcclxuICAgICAgcmV0dXJuICBmYWxzZTtcclxuICAgIFxyXG4gIFx0aWYgKGlzVmFsaWQpIHtcclxuICAgICAgdmFyIHBob25lID0gJHNjb3BlLmNvbnRhY3QucGhvbmUgfHwgXCJcIjtcclxuICAgICAgdmFyIGx2YmxuayA9ICRzY29wZS5jb250YWN0LmFudGkgfHwgXCJcIjtcclxuICAgICAgdmFyIGRhdGEgPSB7XHJcbiAgICAgICAgXCJuYW1lXCI6ICRzY29wZS5jb250YWN0Lm5hbWUsXHJcbiAgICAgICAgXCJwaG9uZVwiOiBwaG9uZSxcclxuICAgICAgICBcImVtYWlsXCI6ICRzY29wZS5jb250YWN0LmVtYWlsLFxyXG4gICAgICAgIFwibWVzc2FnZVwiOiAkc2NvcGUuY29udGFjdC5tZXNzYWdlLFxyXG4gICAgICAgIFwibHZibG5rXCI6IGx2YmxuayAgICAgICAgXHJcbiAgICAgIH1cclxuICAgXHRcdCRodHRwLnBvc3QoJy9hcGkvY29udGFjdHVzLycsIGRhdGEpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0Lm5hbWUgPSBcIlwiO1xyXG4gICAgICAgICAkc2NvcGUuY29udGFjdC5waG9uZSA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0LmVtYWlsID0gXCJcIjtcclxuICAgICAgICAgJHNjb3BlLmNvbnRhY3QubWVzc2FnZSA9IFwiXCI7XHJcbiAgICAgICAgICRzY29wZS5jb250YWN0Rm9ybS4kc2V0UHJpc3RpbmUoKTtcclxuIFxyXG4gICAgICAgfSk7XHJcbiAgXHR9XHJcbiAgfTtcclxufV0pO1xyXG5cclxuLy8vLy8vLy8vLy8vLy8vL0Fib3V0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmFwcC5jb250cm9sbGVyKCdBYm91dENvbnRyb2xsZXInLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xyXG4gICRzY29wZS50YWdsaW5lID0gJ1RoaXMgaXMgdGhlIGFib3V0IHBhZ2UuJztcclxufV0pO1xyXG5cclxuZnVuY3Rpb24gZW5hYmxlZEZpbHRlcih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlLmlzRW5hYmxlZDtcclxufSIsImFwcC5kaXJlY3RpdmUoJ3Byb2plY3RNZXRhJywgZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHtcclxuXHRcdHJlc3RyaWN0OiAnRScsXHJcblx0XHRzY29wZToge1xyXG5cdFx0XHRwcm9qZWN0OiAnPSdcclxuXHRcdH0sXHJcblx0XHRyZXBsYWNlOiB0cnVlLFxyXG5cdFx0dGVtcGxhdGVVcmw6IFwidmlld3MvdGVtcGxhdGVzL3Byb2plY3RNZXRhLmh0bWxcIixcclxuXHRcdGNvbnRyb2xsZXI6IGZ1bmN0aW9uKCRzY29wZSkge1xyXG5cdFx0fVxyXG5cdH07XHJcbn0pOyIsImFuZ3VsYXIubW9kdWxlKCdQcm9qZWN0RmFjdG9yeScsIFtdKS5mYWN0b3J5KCdQcm9qZWN0U2VydmljZScsIFsnJGh0dHAnLCBmdW5jdGlvbigkaHR0cCkge1xuXG4gIHJldHVybiB7XG4gICAgZ2V0IDogZnVuY3Rpb24oY2FsbGJhY2ssIGlkKSB7XG4gICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IGZhbHNlO1xuICAgICAgaWYgKCFjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBpZCA9IGlkIHx8IGZhbHNlO1xuICAgICAgaWYgKCFpZClcbiAgICAgICAgJGh0dHAuZ2V0KCcvYXBpL3Byb2plY3RzJykudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2socmVzLmRhdGEpO1xuICAgICAgICB9ICk7XG4gICAgICBlbHNlXG4gICAgICAgICRodHRwLmdldCgnL2FwaS9wcm9qZWN0cy8nICsgaWQpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlcy5kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG59XSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

////////////////Main/////////////////////
app.controller('MainController', ['$scope', 'ProjectService', function($scope, ProjectService) {
  
  var projectId = false;
  
  ProjectService.get(function(data) {
    data = data || {};

    var slides = $scope.slides = [];
    
    if (data) {
      data = data.filter(enabledFilter);
      data.sort(function(a,b){ return new Date(b.createdDate) - new Date(a.createdDate); });
      angular.forEach(data, function(value, key) {
        slides.push(buildSlide(value.mainImage.url, value.mainImage.caption));
      });
    }
  }, projectId);
  
  $scope.slideInterval = 3000;  
  
  function buildSlide(image, caption) {
    var slide = {
      'image': image,
      'caption': caption
    }    
    return slide;
  };
}]);

////////////////Project/////////////////////
app.controller('ProjectController', ['$scope', 'ProjectService', '$routeParams', "Lightbox", function($scope, ProjectService, $routeParams, Lightbox) {
  $scope.title = 'Projects';
  //console.log(Lightbox);
  $scope.openLightboxModal = function (index) {
    Lightbox.openModal($scope.project.addImages, index);
  }
  
  var projectId = $routeParams.id || false;

  ProjectService.get(function(data) {
    //console.log(data);
    data = data || {};
    data = data.filter(enabledFilter);
    $scope.projects = data;
    
    if (data.length === 1) {
      $scope.project = data[0];
    } else {
        for (var i = 0; i < $scope.projects.length; i++) {
            if ($scope.projects[i].description.length > 150)
            $scope.projects[i].description = $scope.projects[i].description.substring(0, 150) + "..."
        }
    }
  }, projectId);  
}]);

////////////////Contact/////////////////////
app.controller('ContactController', ['$scope', '$http', function($scope, $http) {
  $scope.tagline = 'This is the contact page.';

  $scope.contact = {};

  $scope.send = function(isValid) {
  	//Send data
    var anti = $scope.contact.anti || false;
    if (anti)
      return  false;
    
  	if (isValid) {
      var phone = $scope.contact.phone || "";
      var lvblnk = $scope.contact.anti || "";
      var data = {
        "name": $scope.contact.name,
        "phone": phone,
        "email": $scope.contact.email,
        "message": $scope.contact.message,
        "lvblnk": lvblnk        
      }
   		$http.post('/api/contactus/', data).then(function(res) {
         $scope.contact.name = "";
         $scope.contact.phone = "";
         $scope.contact.email = "";
         $scope.contact.message = "";
         $scope.contactForm.$setPristine();
 
       });
  	}
  };
}]);

////////////////About/////////////////////
app.controller('AboutController', ['$scope', function($scope) {
  $scope.tagline = 'This is the about page.';
}]);

function enabledFilter(value) {
    return value.isEnabled;
}
app.directive('projectMeta', function() {
	return {
		restrict: 'E',
		scope: {
			project: '='
		},
		replace: true,
		templateUrl: "views/templates/projectMeta.html",
		controller: function($scope) {
		}
	};
});
angular.module('ProjectFactory', []).factory('ProjectService', ['$http', function($http) {

  return {
    get : function(callback, id) {
      callback = callback || false;
      if (!callback)
        return false;

      id = id || false;
      if (!id)
        $http.get('/api/projects').then(function(res) {
          return callback(res.data);
        } );
      else
        $http.get('/api/projects/' + id).then(function(res) {
          return callback(res.data);
        });
    }
  }
}]);

//# sourceMappingURL=data:application/json;base64,

////////////////Main/////////////////////
app.controller('MainController', ['$scope', 'ProjectService', function($scope, ProjectService) {
  
  var projectId = false;
  
  ProjectService.get(function(data) {
    data = data || {};

    var slides = $scope.slides = [];
    
    if (data) {
      data = data.filter(enabledFilter);
      data.sort(function(a,b){ return new Date(b.createdDate) - new Date(a.createdDate); });
      angular.forEach(data, function(value, key) {
        slides.push(buildSlide(value.mainImage.url, value.mainImage.caption));
      });
    }
  }, projectId);
  
  $scope.slideInterval = 3000;  
  
  function buildSlide(image, caption) {
    var slide = {
      'image': image,
      'caption': caption
    }    
    return slide;
  };
}]);

////////////////Project/////////////////////
app.controller('ProjectController', ['$scope', 'ProjectService', '$routeParams', "Lightbox", function($scope, ProjectService, $routeParams, Lightbox) {
  $scope.title = 'Projects';
  //console.log(Lightbox);
  $scope.openLightboxModal = function (index) {
    Lightbox.openModal($scope.project.addImages, index);
  }
  
  var projectId = $routeParams.id || false;

  ProjectService.get(function(data) {
    //console.log(data);
    data = data || {};
    data = data.filter(enabledFilter);
    $scope.projects = data;
    
    if (data.length === 1) {
      $scope.project = data[0];
    } else {
        for (var i = 0; i < $scope.projects.length; i++) {
            if ($scope.projects[i].description.length > 150)
            $scope.projects[i].description = $scope.projects[i].description.substring(0, 150) + "..."
        }
    }
  }, projectId);  
}]);

////////////////Contact/////////////////////
app.controller('ContactController', ['$scope', '$http', function($scope, $http) {
  $scope.tagline = 'This is the contact page.';

  $scope.contact = {};

  $scope.send = function(isValid) {
  	//Send data
    var anti = $scope.contact.anti || false;
    if (anti)
      return  false;
    
  	if (isValid) {
      var phone = $scope.contact.phone || "";
      var lvblnk = $scope.contact.anti || "";
      var data = {
        "name": $scope.contact.name,
        "phone": phone,
        "email": $scope.contact.email,
        "message": $scope.contact.message,
        "lvblnk": lvblnk        
      }
   		$http.post('/api/contactus/', data).then(function(res) {
         $scope.contact.name = "";
         $scope.contact.phone = "";
         $scope.contact.email = "";
         $scope.contact.message = "";
         $scope.contactForm.$setPristine();
 
       });
  	}
  };
}]);

////////////////About/////////////////////
app.controller('AboutController', ['$scope', function($scope) {
  $scope.tagline = 'This is the about page.';
}]);

function enabledFilter(value) {
    return value.isEnabled;
}
app.directive('projectMeta', function() {
	return {
		restrict: 'E',
		scope: {
			project: '='
		},
		replace: true,
		templateUrl: "views/templates/projectMeta.html",
		controller: function($scope) {
		}
	};
});
angular.module('ProjectFactory', []).factory('ProjectService', ['$http', function($http) {

  return {
    get : function(callback, id) {
      callback = callback || false;
      if (!callback)
        return false;

      id = id || false;
      if (!id)
        $http.get('/api/projects').then(function(res) {
          return callback(res.data);
        } );
      else
        $http.get('/api/projects/' + id).then(function(res) {
          return callback(res.data);
        });
    }
  }
}]);

//# sourceMappingURL=data:application/json;base64,
